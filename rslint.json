[
  {
    "language": "javascript", // includes typescript & javascript, we may support register other language in the future
    "files": [], // extra files out of tsconfig.json
    "ignores": ["node_modules/**"],
    "languageOptions": {
      "parserOptions": {
        // enable project service for typed linting which will run tsgo language service behind the scene
        "projectService": false,
        // FIXME: enable legacy multi tsconfig project
        // tsgo doesn't support project reference yet, so we have to set config manually
        // will consider migrate to project service when it's supported
        "project": [
          "./packages/rslint/tsconfig.build.json",
          "./packages/rslint-test-tools/tsconfig.spec.json",
          "./packages/vscode-extension/tsconfig.build.json",
          "./packages/rule-tester/tsconfig.build.json"
        ]
      }
    },
    "rules": {
      "@typescript-eslint/promise-function-async": ["warn"],
      "@typescript-eslint/no-floating-promises": "warn",
      "@typescript-eslint/no-unsafe-return": "warn",
      "@typescript-eslint/return-await": "warn",
      "@typescript-eslint/no-unsafe-member-access": "warn",
      "@typescript-eslint/no-unsafe-argument": "warn",
      "@typescript-eslint/no-unsafe-assignment": "warn",
      "@typescript-eslint/no-unsafe-call": "warn",
      "@typescript-eslint/no-confusing-void-expression": "warn",
      "@typescript-eslint/no-redundant-type-constituents": "warn",
      "@typescript-eslint/no-unsafe-type-assertion": "warn"
    },
    "plugins": ["@typescript-eslint"]
  }
]
