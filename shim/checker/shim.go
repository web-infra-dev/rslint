
// Code generated by tools/gen_shims. DO NOT EDIT.

package checker

import "context"
import "github.com/microsoft/typescript-go/internal/ast"
import "github.com/microsoft/typescript-go/internal/binder"
import "github.com/microsoft/typescript-go/internal/checker"
import "github.com/microsoft/typescript-go/internal/collections"
import "github.com/microsoft/typescript-go/internal/core"
import "github.com/microsoft/typescript-go/internal/diagnostics"
import "github.com/microsoft/typescript-go/internal/evaluator"
import "github.com/microsoft/typescript-go/internal/jsnum"
import "github.com/microsoft/typescript-go/internal/nodebuilder"
import "github.com/microsoft/typescript-go/internal/printer"
import "sync"
import "unsafe"

type AccessFlags = checker.AccessFlags
const AccessFlagsAllowMissing = checker.AccessFlagsAllowMissing
const AccessFlagsCacheSymbol = checker.AccessFlagsCacheSymbol
const AccessFlagsContextual = checker.AccessFlagsContextual
const AccessFlagsExpressionPosition = checker.AccessFlagsExpressionPosition
const AccessFlagsIncludeUndefined = checker.AccessFlagsIncludeUndefined
const AccessFlagsNoIndexSignatures = checker.AccessFlagsNoIndexSignatures
const AccessFlagsNone = checker.AccessFlagsNone
const AccessFlagsPersistent = checker.AccessFlagsPersistent
const AccessFlagsReportDeprecated = checker.AccessFlagsReportDeprecated
const AccessFlagsSuppressNoImplicitAnyError = checker.AccessFlagsSuppressNoImplicitAnyError
const AccessFlagsWriting = checker.AccessFlagsWriting
type AccessKind = checker.AccessKind
const AccessKindRead = checker.AccessKindRead
const AccessKindReadWrite = checker.AccessKindReadWrite
const AccessKindWrite = checker.AccessKindWrite
type AliasSymbolLinks = checker.AliasSymbolLinks
type ArrayLiteralLinks = checker.ArrayLiteralLinks
type ArrayToSingleTypeMapper = checker.ArrayToSingleTypeMapper
type ArrayTypeMapper = checker.ArrayTypeMapper
type AssertionLinks = checker.AssertionLinks
type AssignmentKind = checker.AssignmentKind
const AssignmentKindCompound = checker.AssignmentKindCompound
const AssignmentKindDefinite = checker.AssignmentKindDefinite
const AssignmentKindNone = checker.AssignmentKindNone
type AssignmentReducedKey = checker.AssignmentReducedKey
type AssignmentTarget = checker.AssignmentTarget
type CachedSignatureKey = checker.CachedSignatureKey
type CachedTypeKey = checker.CachedTypeKey
type CachedTypeKind = checker.CachedTypeKind
const CachedTypeKindApparentType = checker.CachedTypeKindApparentType
const CachedTypeKindArrayLiteralType = checker.CachedTypeKindArrayLiteralType
const CachedTypeKindAwaitedType = checker.CachedTypeKindAwaitedType
const CachedTypeKindDecoratorContext = checker.CachedTypeKindDecoratorContext
const CachedTypeKindDecoratorContextPrivate = checker.CachedTypeKindDecoratorContextPrivate
const CachedTypeKindDecoratorContextPrivateStatic = checker.CachedTypeKindDecoratorContextPrivateStatic
const CachedTypeKindDecoratorContextStatic = checker.CachedTypeKindDecoratorContextStatic
const CachedTypeKindDefaultOnlyType = checker.CachedTypeKindDefaultOnlyType
const CachedTypeKindEquivalentBaseType = checker.CachedTypeKindEquivalentBaseType
const CachedTypeKindEvolvingArrayType = checker.CachedTypeKindEvolvingArrayType
const CachedTypeKindIndexType = checker.CachedTypeKindIndexType
const CachedTypeKindIndexedAccessForReading = checker.CachedTypeKindIndexedAccessForReading
const CachedTypeKindIndexedAccessForWriting = checker.CachedTypeKindIndexedAccessForWriting
const CachedTypeKindLiteralUnionBaseType = checker.CachedTypeKindLiteralUnionBaseType
const CachedTypeKindPermissiveInstantiation = checker.CachedTypeKindPermissiveInstantiation
const CachedTypeKindPromisedTypeOfPromise = checker.CachedTypeKindPromisedTypeOfPromise
const CachedTypeKindRegularObjectLiteral = checker.CachedTypeKindRegularObjectLiteral
const CachedTypeKindRestrictiveInstantiation = checker.CachedTypeKindRestrictiveInstantiation
const CachedTypeKindRestrictiveTypeParameter = checker.CachedTypeKindRestrictiveTypeParameter
const CachedTypeKindStringIndexType = checker.CachedTypeKindStringIndexType
const CachedTypeKindSyntheticType = checker.CachedTypeKindSyntheticType
const CachedTypeKindWidened = checker.CachedTypeKindWidened
type CallState = checker.CallState
type CheckMode = checker.CheckMode
const CheckModeContextual = checker.CheckModeContextual
const CheckModeForceTuple = checker.CheckModeForceTuple
const CheckModeInferential = checker.CheckModeInferential
const CheckModeIsForSignatureHelp = checker.CheckModeIsForSignatureHelp
const CheckModeNormal = checker.CheckModeNormal
const CheckModeRestBindingElement = checker.CheckModeRestBindingElement
const CheckModeSkipContextSensitive = checker.CheckModeSkipContextSensitive
const CheckModeSkipGenericFunctions = checker.CheckModeSkipGenericFunctions
const CheckModeTypeOnly = checker.CheckModeTypeOnly
type Checker = checker.Checker
//go:linkname Checker_getResolvedSignature github.com/microsoft/typescript-go/internal/checker.(*Checker).getResolvedSignature
func Checker_getResolvedSignature(recv *checker.Checker, node *ast.Node, candidatesOutArray *[]*checker.Signature, checkMode checker.CheckMode) *checker.Signature
//go:linkname Checker_getTypeOfSymbol github.com/microsoft/typescript-go/internal/checker.(*Checker).getTypeOfSymbol
func Checker_getTypeOfSymbol(recv *checker.Checker, symbol *ast.Symbol) *checker.Type
//go:linkname Checker_getWidenedType github.com/microsoft/typescript-go/internal/checker.(*Checker).getWidenedType
func Checker_getWidenedType(recv *checker.Checker, t *checker.Type) *checker.Type
//go:linkname Checker_getPropertiesOfType github.com/microsoft/typescript-go/internal/checker.(*Checker).getPropertiesOfType
func Checker_getPropertiesOfType(recv *checker.Checker, t *checker.Type) []*ast.Symbol
//go:linkname Checker_getPropertyOfType github.com/microsoft/typescript-go/internal/checker.(*Checker).getPropertyOfType
func Checker_getPropertyOfType(recv *checker.Checker, t *checker.Type, name string) *ast.Symbol
//go:linkname Checker_getSignaturesOfType github.com/microsoft/typescript-go/internal/checker.(*Checker).getSignaturesOfType
func Checker_getSignaturesOfType(recv *checker.Checker, t *checker.Type, kind checker.SignatureKind) []*checker.Signature
//go:linkname Checker_getIndexTypeOfType github.com/microsoft/typescript-go/internal/checker.(*Checker).getIndexTypeOfType
func Checker_getIndexTypeOfType(recv *checker.Checker, t *checker.Type, keyType *checker.Type) *checker.Type
//go:linkname Checker_getBaseTypes github.com/microsoft/typescript-go/internal/checker.(*Checker).getBaseTypes
func Checker_getBaseTypes(recv *checker.Checker, t *checker.Type) []*checker.Type
//go:linkname Checker_getReturnTypeOfSignature github.com/microsoft/typescript-go/internal/checker.(*Checker).getReturnTypeOfSignature
func Checker_getReturnTypeOfSignature(recv *checker.Checker, sig *checker.Signature) *checker.Type
//go:linkname Checker_getApparentType github.com/microsoft/typescript-go/internal/checker.(*Checker).getApparentType
func Checker_getApparentType(recv *checker.Checker, t *checker.Type) *checker.Type
//go:linkname Checker_getTypeArguments github.com/microsoft/typescript-go/internal/checker.(*Checker).getTypeArguments
func Checker_getTypeArguments(recv *checker.Checker, t *checker.Type) []*checker.Type
//go:linkname Checker_getTypeFromTypeNode github.com/microsoft/typescript-go/internal/checker.(*Checker).getTypeFromTypeNode
func Checker_getTypeFromTypeNode(recv *checker.Checker, node *ast.Node) *checker.Type
//go:linkname Checker_isArrayType github.com/microsoft/typescript-go/internal/checker.(*Checker).isArrayType
func Checker_isArrayType(recv *checker.Checker, t *checker.Type) bool
//go:linkname Checker_isArrayOrTupleType github.com/microsoft/typescript-go/internal/checker.(*Checker).isArrayOrTupleType
func Checker_isArrayOrTupleType(recv *checker.Checker, t *checker.Type) bool
//go:linkname Checker_getDeclaredTypeOfSymbol github.com/microsoft/typescript-go/internal/checker.(*Checker).getDeclaredTypeOfSymbol
func Checker_getDeclaredTypeOfSymbol(recv *checker.Checker, symbol *ast.Symbol) *checker.Type
//go:linkname Checker_getBaseTypeOfLiteralType github.com/microsoft/typescript-go/internal/checker.(*Checker).getBaseTypeOfLiteralType
func Checker_getBaseTypeOfLiteralType(recv *checker.Checker, t *checker.Type) *checker.Type
//go:linkname Checker_getBaseConstraintOfType github.com/microsoft/typescript-go/internal/checker.(*Checker).getBaseConstraintOfType
func Checker_getBaseConstraintOfType(recv *checker.Checker, t *checker.Type) *checker.Type
//go:linkname Checker_getContextualType github.com/microsoft/typescript-go/internal/checker.(*Checker).getContextualType
func Checker_getContextualType(recv *checker.Checker, node *ast.Node, contextFlags checker.ContextFlags) *checker.Type
//go:linkname Checker_getContextualTypeForArgumentAtIndex github.com/microsoft/typescript-go/internal/checker.(*Checker).getContextualTypeForArgumentAtIndex
func Checker_getContextualTypeForArgumentAtIndex(recv *checker.Checker, callTarget *ast.Node, argIndex int) *checker.Type
//go:linkname Checker_getAwaitedType github.com/microsoft/typescript-go/internal/checker.(*Checker).getAwaitedType
func Checker_getAwaitedType(recv *checker.Checker, t *checker.Type) *checker.Type
//go:linkname Checker_getAccessedPropertyName github.com/microsoft/typescript-go/internal/checker.(*Checker).getAccessedPropertyName
func Checker_getAccessedPropertyName(recv *checker.Checker, access *ast.Node) (string, bool)
//go:linkname Checker_getPropertyNameForKnownSymbolName github.com/microsoft/typescript-go/internal/checker.(*Checker).getPropertyNameForKnownSymbolName
func Checker_getPropertyNameForKnownSymbolName(recv *checker.Checker, symbolName string) string
//go:linkname Checker_isTypeAssignableTo github.com/microsoft/typescript-go/internal/checker.(*Checker).isTypeAssignableTo
func Checker_isTypeAssignableTo(recv *checker.Checker, source *checker.Type, target *checker.Type) bool
//go:linkname Checker_isTypeStrictSubtypeOf github.com/microsoft/typescript-go/internal/checker.(*Checker).isTypeStrictSubtypeOf
func Checker_isTypeStrictSubtypeOf(recv *checker.Checker, source *checker.Type, target *checker.Type) bool
type extra_Checker struct {
  id uint32
  program checker.Program
  compilerOptions *core.CompilerOptions
  files []*ast.SourceFile
  fileIndexMap map[*ast.SourceFile]int
  compareSymbols func(*ast.Symbol, *ast.Symbol) int
  compareSymbolChains func([]*ast.Symbol, []*ast.Symbol) int
  TypeCount uint32
  SymbolCount uint32
  TotalInstantiationCount uint32
  instantiationCount uint32
  instantiationDepth uint32
  inlineLevel int
  currentNode *ast.Node
  varianceTypeParameter *checker.Type
  languageVersion core.ScriptTarget
  moduleKind core.ModuleKind
  moduleResolutionKind core.ModuleResolutionKind
  isInferencePartiallyBlocked bool
  legacyDecorators bool
  emitStandardClassFields bool
  allowSyntheticDefaultImports bool
  strictNullChecks bool
  strictFunctionTypes bool
  strictBindCallApply bool
  strictPropertyInitialization bool
  strictBuiltinIteratorReturn bool
  noImplicitAny bool
  noImplicitThis bool
  useUnknownInCatchVariables bool
  exactOptionalPropertyTypes bool
  canCollectSymbolAliasAccessibilityData bool
  wasCanceled bool
  arrayVariances []checker.VarianceFlags
  globals ast.SymbolTable
  evaluate evaluator.Evaluator
  stringLiteralTypes map[string]*checker.Type
  numberLiteralTypes map[jsnum.Number]*checker.Type
  bigintLiteralTypes map[jsnum.PseudoBigInt]*checker.Type
  enumLiteralTypes map[checker.EnumLiteralKey]*checker.Type
  indexedAccessTypes map[string]*checker.Type
  templateLiteralTypes map[string]*checker.Type
  stringMappingTypes map[checker.StringMappingKey]*checker.Type
  uniqueESSymbolTypes map[*ast.Symbol]*checker.Type
  thisExpandoKinds map[*ast.Symbol]int32
  thisExpandoLocations map[*ast.Symbol]*ast.Node
  subtypeReductionCache map[string][]*checker.Type
  cachedTypes map[checker.CachedTypeKey]*checker.Type
  cachedSignatures map[checker.CachedSignatureKey]*checker.Signature
  undefinedProperties map[string]*ast.Symbol
  narrowedTypes map[checker.NarrowedTypeKey]*checker.Type
  assignmentReducedTypes map[checker.AssignmentReducedKey]*checker.Type
  discriminatedContextualTypes map[checker.DiscriminatedContextualTypeKey]*checker.Type
  instantiationExpressionTypes map[checker.InstantiationExpressionKey]*checker.Type
  substitutionTypes map[checker.SubstitutionTypeKey]*checker.Type
  reverseMappedCache map[checker.ReverseMappedTypeKey]*checker.Type
  reverseHomomorphicMappedCache map[checker.ReverseMappedTypeKey]*checker.Type
  iterationTypesCache map[checker.IterationTypesKey]checker.IterationTypes
  markerTypes collections.Set[*checker.Type]
  undefinedSymbol *ast.Symbol
  argumentsSymbol *ast.Symbol
  requireSymbol *ast.Symbol
  unknownSymbol *ast.Symbol
  resolvingSymbol *ast.Symbol
  unresolvedSymbols map[string]*ast.Symbol
  errorTypes map[string]*checker.Type
  globalThisSymbol *ast.Symbol
  resolveName func(location *ast.Node, name string, meaning ast.SymbolFlags, nameNotFoundMessage *diagnostics.Message, isUse bool, excludeGlobals bool) *ast.Symbol
  resolveNameForSymbolSuggestion func(location *ast.Node, name string, meaning ast.SymbolFlags, nameNotFoundMessage *diagnostics.Message, isUse bool, excludeGlobals bool) *ast.Symbol
  tupleTypes map[string]*checker.Type
  unionTypes map[string]*checker.Type
  unionOfUnionTypes map[checker.UnionOfUnionKey]*checker.Type
  intersectionTypes map[string]*checker.Type
  diagnostics ast.DiagnosticsCollection
  suggestionDiagnostics ast.DiagnosticsCollection
  symbolPool core.Pool[ast.Symbol]
  signaturePool core.Pool[checker.Signature]
  indexInfoPool core.Pool[checker.IndexInfo]
  mergedSymbols map[*ast.Symbol]*ast.Symbol
  factory ast.NodeFactory
  nodeLinks core.LinkStore[*ast.Node, checker.NodeLinks]
  signatureLinks core.LinkStore[*ast.Node, checker.SignatureLinks]
  symbolNodeLinks core.LinkStore[*ast.Node, checker.SymbolNodeLinks]
  typeNodeLinks core.LinkStore[*ast.Node, checker.TypeNodeLinks]
  enumMemberLinks core.LinkStore[*ast.Node, checker.EnumMemberLinks]
  assertionLinks core.LinkStore[*ast.Node, checker.AssertionLinks]
  arrayLiteralLinks core.LinkStore[*ast.Node, checker.ArrayLiteralLinks]
  switchStatementLinks core.LinkStore[*ast.Node, checker.SwitchStatementLinks]
  jsxElementLinks core.LinkStore[*ast.Node, checker.JsxElementLinks]
  symbolReferenceLinks core.LinkStore[*ast.Symbol, checker.SymbolReferenceLinks]
  valueSymbolLinks core.LinkStore[*ast.Symbol, checker.ValueSymbolLinks]
  mappedSymbolLinks core.LinkStore[*ast.Symbol, checker.MappedSymbolLinks]
  deferredSymbolLinks core.LinkStore[*ast.Symbol, checker.DeferredSymbolLinks]
  aliasSymbolLinks core.LinkStore[*ast.Symbol, checker.AliasSymbolLinks]
  moduleSymbolLinks core.LinkStore[*ast.Symbol, checker.ModuleSymbolLinks]
  lateBoundLinks core.LinkStore[*ast.Symbol, checker.LateBoundLinks]
  exportTypeLinks core.LinkStore[*ast.Symbol, checker.ExportTypeLinks]
  membersAndExportsLinks core.LinkStore[*ast.Symbol, checker.MembersAndExportsLinks]
  typeAliasLinks core.LinkStore[*ast.Symbol, checker.TypeAliasLinks]
  declaredTypeLinks core.LinkStore[*ast.Symbol, checker.DeclaredTypeLinks]
  spreadLinks core.LinkStore[*ast.Symbol, checker.SpreadLinks]
  varianceLinks core.LinkStore[*ast.Symbol, checker.VarianceLinks]
  indexSymbolLinks core.LinkStore[*ast.Symbol, checker.IndexSymbolLinks]
  ReverseMappedSymbolLinks core.LinkStore[*ast.Symbol, checker.ReverseMappedSymbolLinks]
  markedAssignmentSymbolLinks core.LinkStore[*ast.Symbol, checker.MarkedAssignmentSymbolLinks]
  symbolContainerLinks core.LinkStore[*ast.Symbol, checker.ContainingSymbolLinks]
  sourceFileLinks core.LinkStore[*ast.SourceFile, checker.SourceFileLinks]
  patternForType map[*checker.Type]*ast.Node
  contextFreeTypes map[*ast.Node]*checker.Type
  anyType *checker.Type
  autoType *checker.Type
  wildcardType *checker.Type
  blockedStringType *checker.Type
  errorType *checker.Type
  unresolvedType *checker.Type
  nonInferrableAnyType *checker.Type
  intrinsicMarkerType *checker.Type
  unknownType *checker.Type
  undefinedType *checker.Type
  undefinedWideningType *checker.Type
  missingType *checker.Type
  undefinedOrMissingType *checker.Type
  optionalType *checker.Type
  nullType *checker.Type
  nullWideningType *checker.Type
  stringType *checker.Type
  numberType *checker.Type
  bigintType *checker.Type
  regularFalseType *checker.Type
  falseType *checker.Type
  regularTrueType *checker.Type
  trueType *checker.Type
  booleanType *checker.Type
  esSymbolType *checker.Type
  voidType *checker.Type
  neverType *checker.Type
  silentNeverType *checker.Type
  implicitNeverType *checker.Type
  unreachableNeverType *checker.Type
  nonPrimitiveType *checker.Type
  stringOrNumberType *checker.Type
  stringNumberSymbolType *checker.Type
  numberOrBigIntType *checker.Type
  templateConstraintType *checker.Type
  numericStringType *checker.Type
  uniqueLiteralType *checker.Type
  uniqueLiteralMapper *checker.TypeMapper
  reliabilityFlags checker.RelationComparisonResult
  reportUnreliableMapper *checker.TypeMapper
  reportUnmeasurableMapper *checker.TypeMapper
  restrictiveMapper *checker.TypeMapper
  permissiveMapper *checker.TypeMapper
  emptyObjectType *checker.Type
  emptyJsxObjectType *checker.Type
  emptyFreshJsxObjectType *checker.Type
  emptyTypeLiteralType *checker.Type
  unknownEmptyObjectType *checker.Type
  unknownUnionType *checker.Type
  emptyGenericType *checker.Type
  anyFunctionType *checker.Type
  noConstraintType *checker.Type
  circularConstraintType *checker.Type
  resolvingDefaultType *checker.Type
  markerSuperType *checker.Type
  markerSubType *checker.Type
  markerOtherType *checker.Type
  markerSuperTypeForCheck *checker.Type
  markerSubTypeForCheck *checker.Type
  noTypePredicate *checker.TypePredicate
  anySignature *checker.Signature
  unknownSignature *checker.Signature
  resolvingSignature *checker.Signature
  silentNeverSignature *checker.Signature
  cachedArgumentsReferenced map[*ast.Node]bool
  enumNumberIndexInfo *checker.IndexInfo
  anyBaseTypeIndexInfo *checker.IndexInfo
  patternAmbientModules []*ast.PatternAmbientModule
  patternAmbientModuleAugmentations ast.SymbolTable
  globalObjectType *checker.Type
  globalFunctionType *checker.Type
  globalCallableFunctionType *checker.Type
  globalNewableFunctionType *checker.Type
  globalArrayType *checker.Type
  globalReadonlyArrayType *checker.Type
  globalStringType *checker.Type
  globalNumberType *checker.Type
  globalBooleanType *checker.Type
  globalRegExpType *checker.Type
  globalThisType *checker.Type
  anyArrayType *checker.Type
  autoArrayType *checker.Type
  anyReadonlyArrayType *checker.Type
  deferredGlobalImportMetaExpressionType *checker.Type
  contextualBindingPatterns []*ast.Node
  emptyStringType *checker.Type
  zeroType *checker.Type
  zeroBigIntType *checker.Type
  typeofType *checker.Type
  typeResolutions []checker.TypeResolution
  resolutionStart int
  inVarianceComputation bool
  apparentArgumentCount *int
  lastGetCombinedNodeFlagsNode *ast.Node
  lastGetCombinedNodeFlagsResult ast.NodeFlags
  lastGetCombinedModifierFlagsNode *ast.Node
  lastGetCombinedModifierFlagsResult ast.ModifierFlags
  freeinferenceState *checker.InferenceState
  freeFlowState *checker.FlowState
  flowLoopCache map[checker.FlowLoopKey]*checker.Type
  flowLoopStack []checker.FlowLoopInfo
  sharedFlows []checker.SharedFlow
  antecedentTypes []*checker.Type
  flowAnalysisDisabled bool
  flowInvocationCount int
  flowTypeCache map[*ast.Node]*checker.Type
  lastFlowNode *ast.FlowNode
  lastFlowNodeReachable bool
  flowNodeReachable map[*ast.FlowNode]bool
  flowNodePostSuper map[*ast.FlowNode]bool
  renamedBindingElementsInTypes []*ast.Node
  contextualInfos []checker.ContextualInfo
  inferenceContextInfos []checker.InferenceContextInfo
  awaitedTypeStack []*checker.Type
  reverseMappedSourceStack []*checker.Type
  reverseMappedTargetStack []*checker.Type
  reverseExpandingFlags checker.ExpandingFlags
  freeRelater *checker.Relater
  subtypeRelation *checker.Relation
  strictSubtypeRelation *checker.Relation
  assignableRelation *checker.Relation
  comparableRelation *checker.Relation
  identityRelation *checker.Relation
  enumRelation map[checker.EnumRelationKey]checker.RelationComparisonResult
  getGlobalESSymbolType func() *checker.Type
  getGlobalBigIntType func() *checker.Type
  getGlobalImportMetaType func() *checker.Type
  getGlobalImportAttributesType func() *checker.Type
  getGlobalImportAttributesTypeChecked func() *checker.Type
  getGlobalNonNullableTypeAliasOrNil func() *ast.Symbol
  getGlobalExtractSymbol func() *ast.Symbol
  getGlobalDisposableType func() *checker.Type
  getGlobalAsyncDisposableType func() *checker.Type
  getGlobalAwaitedSymbol func() *ast.Symbol
  getGlobalAwaitedSymbolOrNil func() *ast.Symbol
  getGlobalNaNSymbolOrNil func() *ast.Symbol
  getGlobalRecordSymbol func() *ast.Symbol
  getGlobalTemplateStringsArrayType func() *checker.Type
  getGlobalESSymbolConstructorSymbolOrNil func() *ast.Symbol
  getGlobalESSymbolConstructorTypeSymbolOrNil func() *ast.Symbol
  getGlobalImportCallOptionsType func() *checker.Type
  getGlobalImportCallOptionsTypeChecked func() *checker.Type
  getGlobalPromiseType func() *checker.Type
  getGlobalPromiseTypeChecked func() *checker.Type
  getGlobalPromiseLikeType func() *checker.Type
  getGlobalPromiseConstructorSymbol func() *ast.Symbol
  getGlobalPromiseConstructorSymbolOrNil func() *ast.Symbol
  getGlobalOmitSymbol func() *ast.Symbol
  getGlobalNoInferSymbolOrNil func() *ast.Symbol
  getGlobalIteratorType func() *checker.Type
  getGlobalIterableType func() *checker.Type
  getGlobalIterableTypeChecked func() *checker.Type
  getGlobalIterableIteratorType func() *checker.Type
  getGlobalIterableIteratorTypeChecked func() *checker.Type
  getGlobalIteratorObjectType func() *checker.Type
  getGlobalGeneratorType func() *checker.Type
  getGlobalAsyncIteratorType func() *checker.Type
  getGlobalAsyncIterableType func() *checker.Type
  getGlobalAsyncIterableTypeChecked func() *checker.Type
  getGlobalAsyncIterableIteratorType func() *checker.Type
  getGlobalAsyncIterableIteratorTypeChecked func() *checker.Type
  getGlobalAsyncIteratorObjectType func() *checker.Type
  getGlobalAsyncGeneratorType func() *checker.Type
  getGlobalIteratorYieldResultType func() *checker.Type
  getGlobalIteratorReturnResultType func() *checker.Type
  getGlobalTypedPropertyDescriptorType func() *checker.Type
  getGlobalClassDecoratorContextType func() *checker.Type
  getGlobalClassMethodDecoratorContextType func() *checker.Type
  getGlobalClassGetterDecoratorContextType func() *checker.Type
  getGlobalClassSetterDecoratorContextType func() *checker.Type
  getGlobalClassAccessorDecoratorContxtType func() *checker.Type
  getGlobalClassAccessorDecoratorContextType func() *checker.Type
  getGlobalClassAccessorDecoratorTargetType func() *checker.Type
  getGlobalClassAccessorDecoratorResultType func() *checker.Type
  getGlobalClassFieldDecoratorContextType func() *checker.Type
  syncIterationTypesResolver *checker.IterationTypesResolver
  asyncIterationTypesResolver *checker.IterationTypesResolver
  isPrimitiveOrObjectOrEmptyType func(*checker.Type) bool
  containsMissingType func(*checker.Type) bool
  couldContainTypeVariables func(*checker.Type) bool
  isStringIndexSignatureOnlyType func(*checker.Type) bool
  markNodeAssignments func(*ast.Node) bool
  emitResolver extra_emitResolver
  emitResolverOnce sync.Once
  _jsxNamespace string
  _jsxFactoryEntity *ast.Node
  skipDirectInferenceNodes collections.Set[*ast.Node]
  ctx context.Context
  packagesMap map[string]bool
  activeMappers []*checker.TypeMapper
  activeTypeMappersCaches []map[string]*checker.Type
  ambientModulesOnce sync.Once
  ambientModules []*ast.Symbol
}
type extra_emitResolver struct {
  checker *checker.Checker
  checkerMu sync.Mutex
  isValueAliasDeclaration func(node *ast.Node) bool
  aliasMarkingVisitor func(node *ast.Node) bool
  referenceResolver binder.ReferenceResolver
  jsxLinks core.LinkStore[*ast.Node, checker.JSXLinks]
  declarationLinks core.LinkStore[*ast.Node, checker.DeclarationLinks]
  declarationFileLinks core.LinkStore[*ast.Node, checker.DeclarationFileLinks]
}
func Checker_numberType(v *checker.Checker) *checker.Type {
  return ((*extra_Checker)(unsafe.Pointer(v))).numberType
}
func Checker_booleanType(v *checker.Checker) *checker.Type {
  return ((*extra_Checker)(unsafe.Pointer(v))).booleanType
}
func Checker_globalRegExpType(v *checker.Checker) *checker.Type {
  return ((*extra_Checker)(unsafe.Pointer(v))).globalRegExpType
}
//go:linkname CompareTypes github.com/microsoft/typescript-go/internal/checker.CompareTypes
func CompareTypes(t1 *checker.Type, t2 *checker.Type) int
type CompositeSignature = checker.CompositeSignature
type CompositeSymbolIdentity = checker.CompositeSymbolIdentity
type CompositeTypeCacheIdentity = checker.CompositeTypeCacheIdentity
type CompositeTypeMapper = checker.CompositeTypeMapper
type ConditionalRoot = checker.ConditionalRoot
type ConditionalType = checker.ConditionalType
type ConstrainedType = checker.ConstrainedType
type ContainingSymbolLinks = checker.ContainingSymbolLinks
type ContextFlags = checker.ContextFlags
const ContextFlagsCompletions = checker.ContextFlagsCompletions
const ContextFlagsNoConstraints = checker.ContextFlagsNoConstraints
const ContextFlagsNone = checker.ContextFlagsNone
const ContextFlagsSignature = checker.ContextFlagsSignature
const ContextFlagsSkipBindingPatterns = checker.ContextFlagsSkipBindingPatterns
type ContextualInfo = checker.ContextualInfo
type DeclarationFileLinks = checker.DeclarationFileLinks
type DeclarationLinks = checker.DeclarationLinks
type DeclarationMeaning = checker.DeclarationMeaning
const DeclarationMeaningGetAccessor = checker.DeclarationMeaningGetAccessor
const DeclarationMeaningGetOrSetAccessor = checker.DeclarationMeaningGetOrSetAccessor
const DeclarationMeaningMethod = checker.DeclarationMeaningMethod
const DeclarationMeaningPrivateStatic = checker.DeclarationMeaningPrivateStatic
const DeclarationMeaningPropertyAssignment = checker.DeclarationMeaningPropertyAssignment
const DeclarationMeaningPropertyAssignmentOrMethod = checker.DeclarationMeaningPropertyAssignmentOrMethod
const DeclarationMeaningSetAccessor = checker.DeclarationMeaningSetAccessor
type DeclarationSpaces = checker.DeclarationSpaces
const DeclarationSpacesExportNamespace = checker.DeclarationSpacesExportNamespace
const DeclarationSpacesExportType = checker.DeclarationSpacesExportType
const DeclarationSpacesExportValue = checker.DeclarationSpacesExportValue
const DeclarationSpacesNone = checker.DeclarationSpacesNone
type DeclaredTypeLinks = checker.DeclaredTypeLinks
type DeferredSymbolLinks = checker.DeferredSymbolLinks
type DeferredTypeMapper = checker.DeferredTypeMapper
type DiagnosticAndArguments = checker.DiagnosticAndArguments
type DiscriminatedContextualTypeKey = checker.DiscriminatedContextualTypeKey
type Discriminator = checker.Discriminator
type ElementFlags = checker.ElementFlags
const ElementFlagsFixed = checker.ElementFlagsFixed
const ElementFlagsNonRequired = checker.ElementFlagsNonRequired
const ElementFlagsNonRest = checker.ElementFlagsNonRest
const ElementFlagsNone = checker.ElementFlagsNone
const ElementFlagsOptional = checker.ElementFlagsOptional
const ElementFlagsRequired = checker.ElementFlagsRequired
const ElementFlagsRest = checker.ElementFlagsRest
const ElementFlagsVariable = checker.ElementFlagsVariable
const ElementFlagsVariadic = checker.ElementFlagsVariadic
type EnumLiteralKey = checker.EnumLiteralKey
type EnumMemberLinks = checker.EnumMemberLinks
type EnumRelationKey = checker.EnumRelationKey
type ErrorChain = checker.ErrorChain
type ErrorOutputContainer = checker.ErrorOutputContainer
type ErrorReporter = checker.ErrorReporter
type EvolvingArrayType = checker.EvolvingArrayType
type ExhaustiveState = checker.ExhaustiveState
const ExhaustiveStateComputing = checker.ExhaustiveStateComputing
const ExhaustiveStateFalse = checker.ExhaustiveStateFalse
const ExhaustiveStateTrue = checker.ExhaustiveStateTrue
const ExhaustiveStateUnknown = checker.ExhaustiveStateUnknown
type ExpandingFlags = checker.ExpandingFlags
const ExpandingFlagsBoth = checker.ExpandingFlagsBoth
const ExpandingFlagsNone = checker.ExpandingFlagsNone
const ExpandingFlagsSource = checker.ExpandingFlagsSource
const ExpandingFlagsTarget = checker.ExpandingFlagsTarget
type ExportCollision = checker.ExportCollision
type ExportCollisionTable = checker.ExportCollisionTable
type ExportTypeLinks = checker.ExportTypeLinks
type FeatureMapEntry = checker.FeatureMapEntry
type FlowLoopInfo = checker.FlowLoopInfo
type FlowLoopKey = checker.FlowLoopKey
type FlowState = checker.FlowState
type FlowType = checker.FlowType
type FunctionFlags = checker.FunctionFlags
const FunctionFlagsAsync = checker.FunctionFlagsAsync
const FunctionFlagsAsyncGenerator = checker.FunctionFlagsAsyncGenerator
const FunctionFlagsGenerator = checker.FunctionFlagsGenerator
const FunctionFlagsInvalid = checker.FunctionFlagsInvalid
const FunctionFlagsNormal = checker.FunctionFlagsNormal
type FunctionTypeMapper = checker.FunctionTypeMapper
//go:linkname GetCombinedLocalAndExportSymbolFlags github.com/microsoft/typescript-go/internal/checker.GetCombinedLocalAndExportSymbolFlags
func GetCombinedLocalAndExportSymbolFlags(symbol *ast.Symbol) ast.SymbolFlags
//go:linkname GetDeclarationModifierFlagsFromSymbol github.com/microsoft/typescript-go/internal/checker.GetDeclarationModifierFlagsFromSymbol
func GetDeclarationModifierFlagsFromSymbol(s *ast.Symbol) ast.ModifierFlags
//go:linkname GetResolvedSignatureForSignatureHelp github.com/microsoft/typescript-go/internal/checker.GetResolvedSignatureForSignatureHelp
func GetResolvedSignatureForSignatureHelp(node *ast.Node, argumentCount int, c *checker.Checker) (*checker.Signature, []*checker.Signature)
//go:linkname GetSingleVariableOfVariableStatement github.com/microsoft/typescript-go/internal/checker.GetSingleVariableOfVariableStatement
func GetSingleVariableOfVariableStatement(node *ast.Node) *ast.Node
//go:linkname HasModifier github.com/microsoft/typescript-go/internal/checker.HasModifier
func HasModifier(node *ast.Node, flags ast.ModifierFlags) bool
type Host = checker.Host
type IndexFlags = checker.IndexFlags
const IndexFlagsNoIndexSignatures = checker.IndexFlagsNoIndexSignatures
const IndexFlagsNoReducibleCheck = checker.IndexFlagsNoReducibleCheck
const IndexFlagsNone = checker.IndexFlagsNone
const IndexFlagsStringsOnly = checker.IndexFlagsStringsOnly
type IndexInfo = checker.IndexInfo
type IndexSymbolLinks = checker.IndexSymbolLinks
type IndexType = checker.IndexType
type IndexedAccessType = checker.IndexedAccessType
type InferenceContext = checker.InferenceContext
type InferenceContextInfo = checker.InferenceContextInfo
type InferenceFlags = checker.InferenceFlags
const InferenceFlagsAnyDefault = checker.InferenceFlagsAnyDefault
const InferenceFlagsNoDefault = checker.InferenceFlagsNoDefault
const InferenceFlagsNone = checker.InferenceFlagsNone
const InferenceFlagsSkippedGenericFunction = checker.InferenceFlagsSkippedGenericFunction
type InferenceInfo = checker.InferenceInfo
type InferenceKey = checker.InferenceKey
type InferencePriority = checker.InferencePriority
const InferencePriorityAlwaysStrict = checker.InferencePriorityAlwaysStrict
const InferencePriorityCircularity = checker.InferencePriorityCircularity
const InferencePriorityContravariantConditional = checker.InferencePriorityContravariantConditional
const InferencePriorityHomomorphicMappedType = checker.InferencePriorityHomomorphicMappedType
const InferencePriorityLiteralKeyof = checker.InferencePriorityLiteralKeyof
const InferencePriorityMappedTypeConstraint = checker.InferencePriorityMappedTypeConstraint
const InferencePriorityMaxValue = checker.InferencePriorityMaxValue
const InferencePriorityNakedTypeVariable = checker.InferencePriorityNakedTypeVariable
const InferencePriorityNoConstraints = checker.InferencePriorityNoConstraints
const InferencePriorityNone = checker.InferencePriorityNone
const InferencePriorityPartialHomomorphicMappedType = checker.InferencePriorityPartialHomomorphicMappedType
const InferencePriorityPriorityImpliesCombination = checker.InferencePriorityPriorityImpliesCombination
const InferencePriorityReturnType = checker.InferencePriorityReturnType
const InferencePrioritySpeculativeTuple = checker.InferencePrioritySpeculativeTuple
const InferencePrioritySubstituteSource = checker.InferencePrioritySubstituteSource
type InferenceState = checker.InferenceState
type InferenceTypeMapper = checker.InferenceTypeMapper
type InheritanceInfo = checker.InheritanceInfo
type InstantiationExpressionKey = checker.InstantiationExpressionKey
type InstantiationExpressionType = checker.InstantiationExpressionType
type InterfaceType = checker.InterfaceType
type extra_InterfaceType struct {
  checker.TypeReference
  allTypeParameters []*checker.Type
  outerTypeParameterCount int
  thisType *checker.Type
  baseTypesResolved bool
  declaredMembersResolved bool
  resolvedBaseConstructorType *checker.Type
  resolvedBaseTypes []*checker.Type
  declaredMembers ast.SymbolTable
  declaredCallSignatures []*checker.Signature
  declaredConstructSignatures []*checker.Signature
  declaredIndexInfos []*checker.IndexInfo
}
func InterfaceType_thisType(v *checker.InterfaceType) *checker.Type {
  return ((*extra_InterfaceType)(unsafe.Pointer(v))).thisType
}
type IntersectionFlags = checker.IntersectionFlags
const IntersectionFlagsNoConstraintReduction = checker.IntersectionFlagsNoConstraintReduction
const IntersectionFlagsNoSupertypeReduction = checker.IntersectionFlagsNoSupertypeReduction
const IntersectionFlagsNone = checker.IntersectionFlagsNone
type IntersectionState = checker.IntersectionState
const IntersectionStateNone = checker.IntersectionStateNone
const IntersectionStateSource = checker.IntersectionStateSource
const IntersectionStateTarget = checker.IntersectionStateTarget
type IntersectionType = checker.IntersectionType
type IntraExpressionInferenceSite = checker.IntraExpressionInferenceSite
type IntrinsicType = checker.IntrinsicType
type IntrinsicTypeKind = checker.IntrinsicTypeKind
const IntrinsicTypeKindCapitalize = checker.IntrinsicTypeKindCapitalize
const IntrinsicTypeKindLowercase = checker.IntrinsicTypeKindLowercase
const IntrinsicTypeKindNoInfer = checker.IntrinsicTypeKindNoInfer
const IntrinsicTypeKindUncapitalize = checker.IntrinsicTypeKindUncapitalize
const IntrinsicTypeKindUnknown = checker.IntrinsicTypeKindUnknown
const IntrinsicTypeKindUppercase = checker.IntrinsicTypeKindUppercase
//go:linkname IsExternalModuleSymbol github.com/microsoft/typescript-go/internal/checker.IsExternalModuleSymbol
func IsExternalModuleSymbol(moduleSymbol *ast.Symbol) bool
//go:linkname IsInTypeQuery github.com/microsoft/typescript-go/internal/checker.IsInTypeQuery
func IsInTypeQuery(node *ast.Node) bool
//go:linkname IsKnownSymbol github.com/microsoft/typescript-go/internal/checker.IsKnownSymbol
func IsKnownSymbol(symbol *ast.Symbol) bool
//go:linkname IsTupleType github.com/microsoft/typescript-go/internal/checker.IsTupleType
func IsTupleType(t *checker.Type) bool
//go:linkname IsTypeAny github.com/microsoft/typescript-go/internal/checker.IsTypeAny
func IsTypeAny(t *checker.Type) bool
type IterationTypeKind = checker.IterationTypeKind
const IterationTypeKindNext = checker.IterationTypeKindNext
const IterationTypeKindReturn = checker.IterationTypeKindReturn
const IterationTypeKindYield = checker.IterationTypeKindYield
type IterationTypes = checker.IterationTypes
type IterationTypesKey = checker.IterationTypesKey
type IterationTypesResolver = checker.IterationTypesResolver
type IterationUse = checker.IterationUse
const IterationUseAllowsAsyncIterablesFlag = checker.IterationUseAllowsAsyncIterablesFlag
const IterationUseAllowsStringInputFlag = checker.IterationUseAllowsStringInputFlag
const IterationUseAllowsSyncIterablesFlag = checker.IterationUseAllowsSyncIterablesFlag
const IterationUseAsyncGeneratorReturnType = checker.IterationUseAsyncGeneratorReturnType
const IterationUseAsyncYieldStar = checker.IterationUseAsyncYieldStar
const IterationUseCacheFlags = checker.IterationUseCacheFlags
const IterationUseDestructuring = checker.IterationUseDestructuring
const IterationUseDestructuringFlag = checker.IterationUseDestructuringFlag
const IterationUseElement = checker.IterationUseElement
const IterationUseForAwaitOf = checker.IterationUseForAwaitOf
const IterationUseForOf = checker.IterationUseForOf
const IterationUseForOfFlag = checker.IterationUseForOfFlag
const IterationUseGeneratorReturnType = checker.IterationUseGeneratorReturnType
const IterationUsePossiblyOutOfBounds = checker.IterationUsePossiblyOutOfBounds
const IterationUseSpread = checker.IterationUseSpread
const IterationUseSpreadFlag = checker.IterationUseSpreadFlag
const IterationUseYieldStar = checker.IterationUseYieldStar
const IterationUseYieldStarFlag = checker.IterationUseYieldStarFlag
type JSXLinks = checker.JSXLinks
type JsxElaborationElement = checker.JsxElaborationElement
type JsxElementLinks = checker.JsxElementLinks
type JsxFlags = checker.JsxFlags
const JsxFlagsIntrinsicElement = checker.JsxFlagsIntrinsicElement
const JsxFlagsIntrinsicIndexedElement = checker.JsxFlagsIntrinsicIndexedElement
const JsxFlagsIntrinsicNamedElement = checker.JsxFlagsIntrinsicNamedElement
const JsxFlagsNone = checker.JsxFlagsNone
var JsxNames = checker.JsxNames
type JsxReferenceKind = checker.JsxReferenceKind
const JsxReferenceKindComponent = checker.JsxReferenceKindComponent
const JsxReferenceKindFunction = checker.JsxReferenceKindFunction
const JsxReferenceKindMixed = checker.JsxReferenceKindMixed
type KeyBuilder = checker.KeyBuilder
var LanguageFeatureMinimumTarget = checker.LanguageFeatureMinimumTarget
type LanguageFeatureMinimumTargetMap = checker.LanguageFeatureMinimumTargetMap
type LateBoundLinks = checker.LateBoundLinks
type LiteralType = checker.LiteralType
const MAX_REVERSE_MAPPED_NESTING_INSPECTION_DEPTH = checker.MAX_REVERSE_MAPPED_NESTING_INSPECTION_DEPTH
type MappedSymbolLinks = checker.MappedSymbolLinks
type MappedType = checker.MappedType
type MappedTypeModifiers = checker.MappedTypeModifiers
const MappedTypeModifiersExcludeOptional = checker.MappedTypeModifiersExcludeOptional
const MappedTypeModifiersExcludeReadonly = checker.MappedTypeModifiersExcludeReadonly
const MappedTypeModifiersIncludeOptional = checker.MappedTypeModifiersIncludeOptional
const MappedTypeModifiersIncludeReadonly = checker.MappedTypeModifiersIncludeReadonly
type MappedTypeNameTypeKind = checker.MappedTypeNameTypeKind
const MappedTypeNameTypeKindFiltering = checker.MappedTypeNameTypeKindFiltering
const MappedTypeNameTypeKindNone = checker.MappedTypeNameTypeKindNone
const MappedTypeNameTypeKindRemapping = checker.MappedTypeNameTypeKindRemapping
type MarkedAssignmentSymbolLinks = checker.MarkedAssignmentSymbolLinks
type MembersAndExportsLinks = checker.MembersAndExportsLinks
type MembersOrExportsResolutionKind = checker.MembersOrExportsResolutionKind
const MembersOrExportsResolutionKindResolvedExports = checker.MembersOrExportsResolutionKindResolvedExports
const MembersOrExportsResolutionKindResolvedMembers = checker.MembersOrExportsResolutionKindResolvedMembers
type MergedTypeMapper = checker.MergedTypeMapper
type MinArgumentCountFlags = checker.MinArgumentCountFlags
const MinArgumentCountFlagsNone = checker.MinArgumentCountFlagsNone
const MinArgumentCountFlagsStrongArityForUntypedJS = checker.MinArgumentCountFlagsStrongArityForUntypedJS
const MinArgumentCountFlagsVoidIsNonOptional = checker.MinArgumentCountFlagsVoidIsNonOptional
type ModuleSymbolLinks = checker.ModuleSymbolLinks
type NarrowedTypeKey = checker.NarrowedTypeKey
//go:linkname NewChecker github.com/microsoft/typescript-go/internal/checker.NewChecker
func NewChecker(program checker.Program) *checker.Checker
//go:linkname NewDiagnosticChainForNode github.com/microsoft/typescript-go/internal/checker.NewDiagnosticChainForNode
func NewDiagnosticChainForNode(chain *ast.Diagnostic, node *ast.Node, message *diagnostics.Message, args ...any) *ast.Diagnostic
//go:linkname NewDiagnosticForNode github.com/microsoft/typescript-go/internal/checker.NewDiagnosticForNode
func NewDiagnosticForNode(node *ast.Node, message *diagnostics.Message, args ...any) *ast.Diagnostic
//go:linkname NewNodeBuilder github.com/microsoft/typescript-go/internal/checker.NewNodeBuilder
func NewNodeBuilder(ch *checker.Checker, e *printer.EmitContext) *checker.NodeBuilder
//go:linkname NewSymbolTrackerImpl github.com/microsoft/typescript-go/internal/checker.NewSymbolTrackerImpl
func NewSymbolTrackerImpl(context *checker.NodeBuilderContext, tracker nodebuilder.SymbolTracker, tchost checker.Host) *checker.SymbolTrackerImpl
type NodeBuilder = checker.NodeBuilder
type NodeBuilderContext = checker.NodeBuilderContext
type NodeBuilderLinks = checker.NodeBuilderLinks
type NodeBuilderSymbolLinks = checker.NodeBuilderSymbolLinks
type NodeCheckFlags = checker.NodeCheckFlags
const NodeCheckFlagsAssignmentsMarked = checker.NodeCheckFlagsAssignmentsMarked
const NodeCheckFlagsBlockScopedBindingInLoop = checker.NodeCheckFlagsBlockScopedBindingInLoop
const NodeCheckFlagsCaptureArguments = checker.NodeCheckFlagsCaptureArguments
const NodeCheckFlagsCaptureNewTarget = checker.NodeCheckFlagsCaptureNewTarget
const NodeCheckFlagsCaptureThis = checker.NodeCheckFlagsCaptureThis
const NodeCheckFlagsCapturedBlockScopedBinding = checker.NodeCheckFlagsCapturedBlockScopedBinding
const NodeCheckFlagsConstructorReference = checker.NodeCheckFlagsConstructorReference
const NodeCheckFlagsContainsCapturedBlockScopeBinding = checker.NodeCheckFlagsContainsCapturedBlockScopeBinding
const NodeCheckFlagsContainsClassWithPrivateIdentifiers = checker.NodeCheckFlagsContainsClassWithPrivateIdentifiers
const NodeCheckFlagsContainsConstructorReference = checker.NodeCheckFlagsContainsConstructorReference
const NodeCheckFlagsContainsSuperPropertyInStaticInitializer = checker.NodeCheckFlagsContainsSuperPropertyInStaticInitializer
const NodeCheckFlagsContextChecked = checker.NodeCheckFlagsContextChecked
const NodeCheckFlagsEnumValuesComputed = checker.NodeCheckFlagsEnumValuesComputed
const NodeCheckFlagsInCheckIdentifier = checker.NodeCheckFlagsInCheckIdentifier
const NodeCheckFlagsInitializerIsUndefined = checker.NodeCheckFlagsInitializerIsUndefined
const NodeCheckFlagsInitializerIsUndefinedComputed = checker.NodeCheckFlagsInitializerIsUndefinedComputed
const NodeCheckFlagsLexicalThis = checker.NodeCheckFlagsLexicalThis
const NodeCheckFlagsLoopWithCapturedBlockScopedBinding = checker.NodeCheckFlagsLoopWithCapturedBlockScopedBinding
const NodeCheckFlagsMethodWithSuperPropertyAccessInAsync = checker.NodeCheckFlagsMethodWithSuperPropertyAccessInAsync
const NodeCheckFlagsMethodWithSuperPropertyAssignmentInAsync = checker.NodeCheckFlagsMethodWithSuperPropertyAssignmentInAsync
const NodeCheckFlagsNeedsLoopOutParameter = checker.NodeCheckFlagsNeedsLoopOutParameter
const NodeCheckFlagsNone = checker.NodeCheckFlagsNone
const NodeCheckFlagsPartiallyTypeChecked = checker.NodeCheckFlagsPartiallyTypeChecked
const NodeCheckFlagsSuperInstance = checker.NodeCheckFlagsSuperInstance
const NodeCheckFlagsSuperStatic = checker.NodeCheckFlagsSuperStatic
const NodeCheckFlagsTypeChecked = checker.NodeCheckFlagsTypeChecked
type NodeLinks = checker.NodeLinks
type ObjectFlags = checker.ObjectFlags
const ObjectFlagsAnonymous = checker.ObjectFlagsAnonymous
const ObjectFlagsArrayLiteral = checker.ObjectFlagsArrayLiteral
const ObjectFlagsClass = checker.ObjectFlagsClass
const ObjectFlagsClassOrInterface = checker.ObjectFlagsClassOrInterface
const ObjectFlagsContainsIntersections = checker.ObjectFlagsContainsIntersections
const ObjectFlagsContainsObjectOrArrayLiteral = checker.ObjectFlagsContainsObjectOrArrayLiteral
const ObjectFlagsContainsSpread = checker.ObjectFlagsContainsSpread
const ObjectFlagsContainsWideningType = checker.ObjectFlagsContainsWideningType
const ObjectFlagsCouldContainTypeVariables = checker.ObjectFlagsCouldContainTypeVariables
const ObjectFlagsCouldContainTypeVariablesComputed = checker.ObjectFlagsCouldContainTypeVariablesComputed
const ObjectFlagsEvolvingArray = checker.ObjectFlagsEvolvingArray
const ObjectFlagsFreshLiteral = checker.ObjectFlagsFreshLiteral
const ObjectFlagsIdenticalBaseTypeCalculated = checker.ObjectFlagsIdenticalBaseTypeCalculated
const ObjectFlagsIdenticalBaseTypeExists = checker.ObjectFlagsIdenticalBaseTypeExists
const ObjectFlagsInstantiated = checker.ObjectFlagsInstantiated
const ObjectFlagsInstantiatedMapped = checker.ObjectFlagsInstantiatedMapped
const ObjectFlagsInstantiationExpressionType = checker.ObjectFlagsInstantiationExpressionType
const ObjectFlagsInterface = checker.ObjectFlagsInterface
const ObjectFlagsIsClassInstanceClone = checker.ObjectFlagsIsClassInstanceClone
const ObjectFlagsIsConstrainedTypeVariable = checker.ObjectFlagsIsConstrainedTypeVariable
const ObjectFlagsIsGenericIndexType = checker.ObjectFlagsIsGenericIndexType
const ObjectFlagsIsGenericObjectType = checker.ObjectFlagsIsGenericObjectType
const ObjectFlagsIsGenericType = checker.ObjectFlagsIsGenericType
const ObjectFlagsIsGenericTypeComputed = checker.ObjectFlagsIsGenericTypeComputed
const ObjectFlagsIsNeverIntersection = checker.ObjectFlagsIsNeverIntersection
const ObjectFlagsIsNeverIntersectionComputed = checker.ObjectFlagsIsNeverIntersectionComputed
const ObjectFlagsIsUnknownLikeUnion = checker.ObjectFlagsIsUnknownLikeUnion
const ObjectFlagsIsUnknownLikeUnionComputed = checker.ObjectFlagsIsUnknownLikeUnionComputed
const ObjectFlagsJSLiteral = checker.ObjectFlagsJSLiteral
const ObjectFlagsJsxAttributes = checker.ObjectFlagsJsxAttributes
const ObjectFlagsMapped = checker.ObjectFlagsMapped
const ObjectFlagsMembersResolved = checker.ObjectFlagsMembersResolved
const ObjectFlagsNonInferrableType = checker.ObjectFlagsNonInferrableType
const ObjectFlagsNone = checker.ObjectFlagsNone
const ObjectFlagsObjectLiteral = checker.ObjectFlagsObjectLiteral
const ObjectFlagsObjectLiteralPatternWithComputedProperties = checker.ObjectFlagsObjectLiteralPatternWithComputedProperties
const ObjectFlagsObjectRestType = checker.ObjectFlagsObjectRestType
const ObjectFlagsObjectTypeKindMask = checker.ObjectFlagsObjectTypeKindMask
const ObjectFlagsPrimitiveUnion = checker.ObjectFlagsPrimitiveUnion
const ObjectFlagsPropagatingFlags = checker.ObjectFlagsPropagatingFlags
const ObjectFlagsReference = checker.ObjectFlagsReference
const ObjectFlagsRequiresWidening = checker.ObjectFlagsRequiresWidening
const ObjectFlagsReverseMapped = checker.ObjectFlagsReverseMapped
const ObjectFlagsSingleSignatureType = checker.ObjectFlagsSingleSignatureType
const ObjectFlagsTuple = checker.ObjectFlagsTuple
type ObjectLiteralDiscriminator = checker.ObjectLiteralDiscriminator
type ObjectType = checker.ObjectType
type ParseFlags = checker.ParseFlags
const ParseFlagsAwait = checker.ParseFlagsAwait
const ParseFlagsIgnoreMissingOpenBrace = checker.ParseFlagsIgnoreMissingOpenBrace
const ParseFlagsJSDoc = checker.ParseFlagsJSDoc
const ParseFlagsNone = checker.ParseFlagsNone
const ParseFlagsType = checker.ParseFlagsType
const ParseFlagsYield = checker.ParseFlagsYield
type PredicateSemantics = checker.PredicateSemantics
const PredicateSemanticsAlways = checker.PredicateSemanticsAlways
const PredicateSemanticsNever = checker.PredicateSemanticsNever
const PredicateSemanticsNone = checker.PredicateSemanticsNone
const PredicateSemanticsSometimes = checker.PredicateSemanticsSometimes
type Program = checker.Program
var ReactNames = checker.ReactNames
type RecursionFlags = checker.RecursionFlags
const RecursionFlagsBoth = checker.RecursionFlagsBoth
const RecursionFlagsNone = checker.RecursionFlagsNone
const RecursionFlagsSource = checker.RecursionFlagsSource
const RecursionFlagsTarget = checker.RecursionFlagsTarget
type RecursionId = checker.RecursionId
type RecursionIdKind = checker.RecursionIdKind
const RecursionIdKindNode = checker.RecursionIdKindNode
const RecursionIdKindSymbol = checker.RecursionIdKindSymbol
const RecursionIdKindType = checker.RecursionIdKindType
type ReferenceHint = checker.ReferenceHint
const ReferenceHintDecorator = checker.ReferenceHintDecorator
const ReferenceHintExportAssignment = checker.ReferenceHintExportAssignment
const ReferenceHintExportImportEquals = checker.ReferenceHintExportImportEquals
const ReferenceHintExportSpecifier = checker.ReferenceHintExportSpecifier
const ReferenceHintIdentifier = checker.ReferenceHintIdentifier
const ReferenceHintJsx = checker.ReferenceHintJsx
const ReferenceHintProperty = checker.ReferenceHintProperty
const ReferenceHintUnspecified = checker.ReferenceHintUnspecified
type Relater = checker.Relater
type Relation = checker.Relation
type RelationComparisonResult = checker.RelationComparisonResult
const RelationComparisonResultComplexityOverflow = checker.RelationComparisonResultComplexityOverflow
const RelationComparisonResultFailed = checker.RelationComparisonResultFailed
const RelationComparisonResultNone = checker.RelationComparisonResultNone
const RelationComparisonResultOverflow = checker.RelationComparisonResultOverflow
const RelationComparisonResultReportsMask = checker.RelationComparisonResultReportsMask
const RelationComparisonResultReportsUnmeasurable = checker.RelationComparisonResultReportsUnmeasurable
const RelationComparisonResultReportsUnreliable = checker.RelationComparisonResultReportsUnreliable
const RelationComparisonResultStackDepthOverflow = checker.RelationComparisonResultStackDepthOverflow
const RelationComparisonResultSucceeded = checker.RelationComparisonResultSucceeded
type ReverseMappedSymbolLinks = checker.ReverseMappedSymbolLinks
type ReverseMappedType = checker.ReverseMappedType
type ReverseMappedTypeKey = checker.ReverseMappedTypeKey
type SerializedTypeEntry = checker.SerializedTypeEntry
type SharedFlow = checker.SharedFlow
type Signature = checker.Signature
type extra_Signature struct {
  flags checker.SignatureFlags
  minArgumentCount int32
  resolvedMinArgumentCount int32
  declaration *ast.Node
  typeParameters []*checker.Type
  parameters []*ast.Symbol
  thisParameter *ast.Symbol
  resolvedReturnType *checker.Type
  resolvedTypePredicate *checker.TypePredicate
  target *checker.Signature
  mapper *checker.TypeMapper
  isolatedSignatureType *checker.Type
  composite *checker.CompositeSignature
}
func Signature_parameters(v *checker.Signature) []*ast.Symbol {
  return ((*extra_Signature)(unsafe.Pointer(v))).parameters
}
func Signature_declaration(v *checker.Signature) *ast.Node {
  return ((*extra_Signature)(unsafe.Pointer(v))).declaration
}
type SignatureCheckMode = checker.SignatureCheckMode
const SignatureCheckModeBivariantCallback = checker.SignatureCheckModeBivariantCallback
const SignatureCheckModeCallback = checker.SignatureCheckModeCallback
const SignatureCheckModeIgnoreReturnTypes = checker.SignatureCheckModeIgnoreReturnTypes
const SignatureCheckModeNone = checker.SignatureCheckModeNone
const SignatureCheckModeStrictArity = checker.SignatureCheckModeStrictArity
const SignatureCheckModeStrictCallback = checker.SignatureCheckModeStrictCallback
const SignatureCheckModeStrictTopSignature = checker.SignatureCheckModeStrictTopSignature
type SignatureFlags = checker.SignatureFlags
const SignatureFlagsAbstract = checker.SignatureFlagsAbstract
const SignatureFlagsCallChainFlags = checker.SignatureFlagsCallChainFlags
const SignatureFlagsConstruct = checker.SignatureFlagsConstruct
const SignatureFlagsHasLiteralTypes = checker.SignatureFlagsHasLiteralTypes
const SignatureFlagsHasRestParameter = checker.SignatureFlagsHasRestParameter
const SignatureFlagsIsInnerCallChain = checker.SignatureFlagsIsInnerCallChain
const SignatureFlagsIsNonInferrable = checker.SignatureFlagsIsNonInferrable
const SignatureFlagsIsOuterCallChain = checker.SignatureFlagsIsOuterCallChain
const SignatureFlagsIsSignatureCandidateForOverloadFailure = checker.SignatureFlagsIsSignatureCandidateForOverloadFailure
const SignatureFlagsIsUntypedSignatureInJSFile = checker.SignatureFlagsIsUntypedSignatureInJSFile
const SignatureFlagsNone = checker.SignatureFlagsNone
const SignatureFlagsPropagatingFlags = checker.SignatureFlagsPropagatingFlags
const SignatureKeyBase = checker.SignatureKeyBase
const SignatureKeyCanonical = checker.SignatureKeyCanonical
const SignatureKeyErased = checker.SignatureKeyErased
const SignatureKeyImplementation = checker.SignatureKeyImplementation
const SignatureKeyInner = checker.SignatureKeyInner
const SignatureKeyOuter = checker.SignatureKeyOuter
type SignatureKind = checker.SignatureKind
const SignatureKindCall = checker.SignatureKindCall
const SignatureKindConstruct = checker.SignatureKindConstruct
type SignatureLinks = checker.SignatureLinks
type SignatureToSignatureDeclarationOptions = checker.SignatureToSignatureDeclarationOptions
type SimpleTypeMapper = checker.SimpleTypeMapper
type SingleSignatureType = checker.SingleSignatureType
//go:linkname SkipAlias github.com/microsoft/typescript-go/internal/checker.SkipAlias
func SkipAlias(symbol *ast.Symbol, checker *checker.Checker) *ast.Symbol
//go:linkname SkipTypeChecking github.com/microsoft/typescript-go/internal/checker.SkipTypeChecking
func SkipTypeChecking(sourceFile *ast.SourceFile, options *core.CompilerOptions, host checker.Program, ignoreNoCheck bool) bool
type SourceFileLinks = checker.SourceFileLinks
type SpreadLinks = checker.SpreadLinks
type StringLiteralType = checker.StringLiteralType
type StringMappingKey = checker.StringMappingKey
type StringMappingType = checker.StringMappingType
type StructuredType = checker.StructuredType
type SubstitutionType = checker.SubstitutionType
type SubstitutionTypeKey = checker.SubstitutionTypeKey
type SwitchStatementLinks = checker.SwitchStatementLinks
type SymbolFormatFlags = checker.SymbolFormatFlags
const SymbolFormatFlagsAllowAnyNodeKind = checker.SymbolFormatFlagsAllowAnyNodeKind
const SymbolFormatFlagsDoNotIncludeSymbolChain = checker.SymbolFormatFlagsDoNotIncludeSymbolChain
const SymbolFormatFlagsNone = checker.SymbolFormatFlagsNone
const SymbolFormatFlagsUseAliasDefinedOutsideCurrentScope = checker.SymbolFormatFlagsUseAliasDefinedOutsideCurrentScope
const SymbolFormatFlagsUseOnlyExternalAliasing = checker.SymbolFormatFlagsUseOnlyExternalAliasing
const SymbolFormatFlagsWriteComputedProps = checker.SymbolFormatFlagsWriteComputedProps
const SymbolFormatFlagsWriteTypeParametersOrArguments = checker.SymbolFormatFlagsWriteTypeParametersOrArguments
type SymbolNodeLinks = checker.SymbolNodeLinks
type SymbolReferenceLinks = checker.SymbolReferenceLinks
type SymbolTrackerImpl = checker.SymbolTrackerImpl
type TemplateLiteralType = checker.TemplateLiteralType
type Ternary = checker.Ternary
const TernaryFalse = checker.TernaryFalse
const TernaryMaybe = checker.TernaryMaybe
const TernaryTrue = checker.TernaryTrue
const TernaryUnknown = checker.TernaryUnknown
type TrackedSymbolArgs = checker.TrackedSymbolArgs
type TupleElementInfo = checker.TupleElementInfo
type TupleNormalizer = checker.TupleNormalizer
type TupleType = checker.TupleType
type extra_TupleType struct {
  checker.InterfaceType
  elementInfos []checker.TupleElementInfo
  minLength int
  fixedLength int
  combinedFlags checker.ElementFlags
  readonly bool
}
func TupleType_combinedFlags(v *checker.TupleType) checker.ElementFlags {
  return ((*extra_TupleType)(unsafe.Pointer(v))).combinedFlags
}
type Type = checker.Type
type extra_Type struct {
  flags checker.TypeFlags
  objectFlags checker.ObjectFlags
  id checker.TypeId
  symbol *ast.Symbol
  alias *checker.TypeAlias
  checker *checker.Checker
  data checker.TypeData
}
func Type_alias(v *checker.Type) *checker.TypeAlias {
  return ((*extra_Type)(unsafe.Pointer(v))).alias
}
func Type_flags(v *checker.Type) checker.TypeFlags {
  return ((*extra_Type)(unsafe.Pointer(v))).flags
}
func Type_symbol(v *checker.Type) *ast.Symbol {
  return ((*extra_Type)(unsafe.Pointer(v))).symbol
}
func Type_objectFlags(v *checker.Type) checker.ObjectFlags {
  return ((*extra_Type)(unsafe.Pointer(v))).objectFlags
}
type TypeAlias = checker.TypeAlias
type TypeAliasLinks = checker.TypeAliasLinks
type TypeBase = checker.TypeBase
type TypeComparer = checker.TypeComparer
type TypeData = checker.TypeData
type TypeDiscriminator = checker.TypeDiscriminator
type TypeFacts = checker.TypeFacts
const TypeFactsAll = checker.TypeFactsAll
const TypeFactsAllTypeofNE = checker.TypeFactsAllTypeofNE
const TypeFactsAndFactsMask = checker.TypeFactsAndFactsMask
const TypeFactsBaseBigIntFacts = checker.TypeFactsBaseBigIntFacts
const TypeFactsBaseBigIntStrictFacts = checker.TypeFactsBaseBigIntStrictFacts
const TypeFactsBaseBooleanFacts = checker.TypeFactsBaseBooleanFacts
const TypeFactsBaseBooleanStrictFacts = checker.TypeFactsBaseBooleanStrictFacts
const TypeFactsBaseNumberFacts = checker.TypeFactsBaseNumberFacts
const TypeFactsBaseNumberStrictFacts = checker.TypeFactsBaseNumberStrictFacts
const TypeFactsBaseStringFacts = checker.TypeFactsBaseStringFacts
const TypeFactsBaseStringStrictFacts = checker.TypeFactsBaseStringStrictFacts
const TypeFactsBigIntFacts = checker.TypeFactsBigIntFacts
const TypeFactsBigIntStrictFacts = checker.TypeFactsBigIntStrictFacts
const TypeFactsBooleanFacts = checker.TypeFactsBooleanFacts
const TypeFactsBooleanStrictFacts = checker.TypeFactsBooleanStrictFacts
const TypeFactsEQNull = checker.TypeFactsEQNull
const TypeFactsEQUndefined = checker.TypeFactsEQUndefined
const TypeFactsEQUndefinedOrNull = checker.TypeFactsEQUndefinedOrNull
const TypeFactsEmptyObjectFacts = checker.TypeFactsEmptyObjectFacts
const TypeFactsEmptyObjectStrictFacts = checker.TypeFactsEmptyObjectStrictFacts
const TypeFactsEmptyStringFacts = checker.TypeFactsEmptyStringFacts
const TypeFactsEmptyStringStrictFacts = checker.TypeFactsEmptyStringStrictFacts
const TypeFactsFalseFacts = checker.TypeFactsFalseFacts
const TypeFactsFalseStrictFacts = checker.TypeFactsFalseStrictFacts
const TypeFactsFalsy = checker.TypeFactsFalsy
const TypeFactsFunctionFacts = checker.TypeFactsFunctionFacts
const TypeFactsFunctionStrictFacts = checker.TypeFactsFunctionStrictFacts
const TypeFactsIsNull = checker.TypeFactsIsNull
const TypeFactsIsUndefined = checker.TypeFactsIsUndefined
const TypeFactsIsUndefinedOrNull = checker.TypeFactsIsUndefinedOrNull
const TypeFactsNENull = checker.TypeFactsNENull
const TypeFactsNEUndefined = checker.TypeFactsNEUndefined
const TypeFactsNEUndefinedOrNull = checker.TypeFactsNEUndefinedOrNull
const TypeFactsNonEmptyStringFacts = checker.TypeFactsNonEmptyStringFacts
const TypeFactsNonEmptyStringStrictFacts = checker.TypeFactsNonEmptyStringStrictFacts
const TypeFactsNonZeroBigIntFacts = checker.TypeFactsNonZeroBigIntFacts
const TypeFactsNonZeroBigIntStrictFacts = checker.TypeFactsNonZeroBigIntStrictFacts
const TypeFactsNonZeroNumberFacts = checker.TypeFactsNonZeroNumberFacts
const TypeFactsNonZeroNumberStrictFacts = checker.TypeFactsNonZeroNumberStrictFacts
const TypeFactsNone = checker.TypeFactsNone
const TypeFactsNullFacts = checker.TypeFactsNullFacts
const TypeFactsNumberFacts = checker.TypeFactsNumberFacts
const TypeFactsNumberStrictFacts = checker.TypeFactsNumberStrictFacts
const TypeFactsObjectFacts = checker.TypeFactsObjectFacts
const TypeFactsObjectStrictFacts = checker.TypeFactsObjectStrictFacts
const TypeFactsOrFactsMask = checker.TypeFactsOrFactsMask
const TypeFactsStringFacts = checker.TypeFactsStringFacts
const TypeFactsStringStrictFacts = checker.TypeFactsStringStrictFacts
const TypeFactsSymbolFacts = checker.TypeFactsSymbolFacts
const TypeFactsSymbolStrictFacts = checker.TypeFactsSymbolStrictFacts
const TypeFactsTrueFacts = checker.TypeFactsTrueFacts
const TypeFactsTrueStrictFacts = checker.TypeFactsTrueStrictFacts
const TypeFactsTruthy = checker.TypeFactsTruthy
const TypeFactsTypeofEQBigInt = checker.TypeFactsTypeofEQBigInt
const TypeFactsTypeofEQBoolean = checker.TypeFactsTypeofEQBoolean
const TypeFactsTypeofEQFunction = checker.TypeFactsTypeofEQFunction
const TypeFactsTypeofEQHostObject = checker.TypeFactsTypeofEQHostObject
const TypeFactsTypeofEQNumber = checker.TypeFactsTypeofEQNumber
const TypeFactsTypeofEQObject = checker.TypeFactsTypeofEQObject
const TypeFactsTypeofEQString = checker.TypeFactsTypeofEQString
const TypeFactsTypeofEQSymbol = checker.TypeFactsTypeofEQSymbol
const TypeFactsTypeofNEBigInt = checker.TypeFactsTypeofNEBigInt
const TypeFactsTypeofNEBoolean = checker.TypeFactsTypeofNEBoolean
const TypeFactsTypeofNEFunction = checker.TypeFactsTypeofNEFunction
const TypeFactsTypeofNEHostObject = checker.TypeFactsTypeofNEHostObject
const TypeFactsTypeofNENumber = checker.TypeFactsTypeofNENumber
const TypeFactsTypeofNEObject = checker.TypeFactsTypeofNEObject
const TypeFactsTypeofNEString = checker.TypeFactsTypeofNEString
const TypeFactsTypeofNESymbol = checker.TypeFactsTypeofNESymbol
const TypeFactsUndefinedFacts = checker.TypeFactsUndefinedFacts
const TypeFactsUnknownFacts = checker.TypeFactsUnknownFacts
const TypeFactsVoidFacts = checker.TypeFactsVoidFacts
const TypeFactsZeroBigIntFacts = checker.TypeFactsZeroBigIntFacts
const TypeFactsZeroBigIntStrictFacts = checker.TypeFactsZeroBigIntStrictFacts
const TypeFactsZeroNumberFacts = checker.TypeFactsZeroNumberFacts
const TypeFactsZeroNumberStrictFacts = checker.TypeFactsZeroNumberStrictFacts
type TypeFlags = checker.TypeFlags
const TypeFlagsAny = checker.TypeFlagsAny
const TypeFlagsAnyOrUnknown = checker.TypeFlagsAnyOrUnknown
const TypeFlagsBigInt = checker.TypeFlagsBigInt
const TypeFlagsBigIntLike = checker.TypeFlagsBigIntLike
const TypeFlagsBigIntLiteral = checker.TypeFlagsBigIntLiteral
const TypeFlagsBoolean = checker.TypeFlagsBoolean
const TypeFlagsBooleanLike = checker.TypeFlagsBooleanLike
const TypeFlagsBooleanLiteral = checker.TypeFlagsBooleanLiteral
const TypeFlagsConditional = checker.TypeFlagsConditional
const TypeFlagsDefinitelyFalsy = checker.TypeFlagsDefinitelyFalsy
const TypeFlagsDefinitelyNonNullable = checker.TypeFlagsDefinitelyNonNullable
const TypeFlagsDisjointDomains = checker.TypeFlagsDisjointDomains
const TypeFlagsESSymbol = checker.TypeFlagsESSymbol
const TypeFlagsESSymbolLike = checker.TypeFlagsESSymbolLike
const TypeFlagsEnum = checker.TypeFlagsEnum
const TypeFlagsEnumLike = checker.TypeFlagsEnumLike
const TypeFlagsEnumLiteral = checker.TypeFlagsEnumLiteral
const TypeFlagsFreshable = checker.TypeFlagsFreshable
const TypeFlagsIncludesConstrainedTypeVariable = checker.TypeFlagsIncludesConstrainedTypeVariable
const TypeFlagsIncludesEmptyObject = checker.TypeFlagsIncludesEmptyObject
const TypeFlagsIncludesError = checker.TypeFlagsIncludesError
const TypeFlagsIncludesInstantiable = checker.TypeFlagsIncludesInstantiable
const TypeFlagsIncludesMask = checker.TypeFlagsIncludesMask
const TypeFlagsIncludesMissingType = checker.TypeFlagsIncludesMissingType
const TypeFlagsIncludesNonWideningType = checker.TypeFlagsIncludesNonWideningType
const TypeFlagsIncludesWildcard = checker.TypeFlagsIncludesWildcard
const TypeFlagsIndex = checker.TypeFlagsIndex
const TypeFlagsIndexedAccess = checker.TypeFlagsIndexedAccess
const TypeFlagsInstantiable = checker.TypeFlagsInstantiable
const TypeFlagsInstantiableNonPrimitive = checker.TypeFlagsInstantiableNonPrimitive
const TypeFlagsInstantiablePrimitive = checker.TypeFlagsInstantiablePrimitive
const TypeFlagsIntersection = checker.TypeFlagsIntersection
const TypeFlagsIntrinsic = checker.TypeFlagsIntrinsic
const TypeFlagsLiteral = checker.TypeFlagsLiteral
const TypeFlagsNarrowable = checker.TypeFlagsNarrowable
const TypeFlagsNever = checker.TypeFlagsNever
const TypeFlagsNonPrimitive = checker.TypeFlagsNonPrimitive
const TypeFlagsNone = checker.TypeFlagsNone
const TypeFlagsNotPrimitiveUnion = checker.TypeFlagsNotPrimitiveUnion
const TypeFlagsNull = checker.TypeFlagsNull
const TypeFlagsNullable = checker.TypeFlagsNullable
const TypeFlagsNumber = checker.TypeFlagsNumber
const TypeFlagsNumberLike = checker.TypeFlagsNumberLike
const TypeFlagsNumberLiteral = checker.TypeFlagsNumberLiteral
const TypeFlagsObject = checker.TypeFlagsObject
const TypeFlagsObjectFlagsType = checker.TypeFlagsObjectFlagsType
const TypeFlagsPossiblyFalsy = checker.TypeFlagsPossiblyFalsy
const TypeFlagsPrimitive = checker.TypeFlagsPrimitive
const TypeFlagsReserved1 = checker.TypeFlagsReserved1
const TypeFlagsReserved2 = checker.TypeFlagsReserved2
const TypeFlagsReserved3 = checker.TypeFlagsReserved3
const TypeFlagsSimplifiable = checker.TypeFlagsSimplifiable
const TypeFlagsSingleton = checker.TypeFlagsSingleton
const TypeFlagsString = checker.TypeFlagsString
const TypeFlagsStringLike = checker.TypeFlagsStringLike
const TypeFlagsStringLiteral = checker.TypeFlagsStringLiteral
const TypeFlagsStringMapping = checker.TypeFlagsStringMapping
const TypeFlagsStringOrNumberLiteral = checker.TypeFlagsStringOrNumberLiteral
const TypeFlagsStringOrNumberLiteralOrUnique = checker.TypeFlagsStringOrNumberLiteralOrUnique
const TypeFlagsStructuredOrInstantiable = checker.TypeFlagsStructuredOrInstantiable
const TypeFlagsStructuredType = checker.TypeFlagsStructuredType
const TypeFlagsSubstitution = checker.TypeFlagsSubstitution
const TypeFlagsTemplateLiteral = checker.TypeFlagsTemplateLiteral
const TypeFlagsTypeParameter = checker.TypeFlagsTypeParameter
const TypeFlagsTypeVariable = checker.TypeFlagsTypeVariable
const TypeFlagsUndefined = checker.TypeFlagsUndefined
const TypeFlagsUnion = checker.TypeFlagsUnion
const TypeFlagsUnionOrIntersection = checker.TypeFlagsUnionOrIntersection
const TypeFlagsUniqueESSymbol = checker.TypeFlagsUniqueESSymbol
const TypeFlagsUnit = checker.TypeFlagsUnit
const TypeFlagsUnknown = checker.TypeFlagsUnknown
const TypeFlagsVoid = checker.TypeFlagsVoid
const TypeFlagsVoidLike = checker.TypeFlagsVoidLike
type TypeFormatFlags = checker.TypeFormatFlags
const TypeFormatFlagsAddUndefined = checker.TypeFormatFlagsAddUndefined
const TypeFormatFlagsAllowUniqueESSymbolType = checker.TypeFormatFlagsAllowUniqueESSymbolType
const TypeFormatFlagsGenerateNamesForShadowedTypeParams = checker.TypeFormatFlagsGenerateNamesForShadowedTypeParams
const TypeFormatFlagsInArrayType = checker.TypeFormatFlagsInArrayType
const TypeFormatFlagsInElementType = checker.TypeFormatFlagsInElementType
const TypeFormatFlagsInFirstTypeArgument = checker.TypeFormatFlagsInFirstTypeArgument
const TypeFormatFlagsInTypeAlias = checker.TypeFormatFlagsInTypeAlias
const TypeFormatFlagsMultilineObjectLiterals = checker.TypeFormatFlagsMultilineObjectLiterals
const TypeFormatFlagsNoTruncation = checker.TypeFormatFlagsNoTruncation
const TypeFormatFlagsNoTypeReduction = checker.TypeFormatFlagsNoTypeReduction
const TypeFormatFlagsNodeBuilderFlagsMask = checker.TypeFormatFlagsNodeBuilderFlagsMask
const TypeFormatFlagsNone = checker.TypeFormatFlagsNone
const TypeFormatFlagsOmitParameterModifiers = checker.TypeFormatFlagsOmitParameterModifiers
const TypeFormatFlagsOmitThisParameter = checker.TypeFormatFlagsOmitThisParameter
const TypeFormatFlagsSuppressAnyReturnType = checker.TypeFormatFlagsSuppressAnyReturnType
const TypeFormatFlagsUseAliasDefinedOutsideCurrentScope = checker.TypeFormatFlagsUseAliasDefinedOutsideCurrentScope
const TypeFormatFlagsUseFullyQualifiedType = checker.TypeFormatFlagsUseFullyQualifiedType
const TypeFormatFlagsUseSingleQuotesForStringLiteralType = checker.TypeFormatFlagsUseSingleQuotesForStringLiteralType
const TypeFormatFlagsUseStructuralFallback = checker.TypeFormatFlagsUseStructuralFallback
const TypeFormatFlagsUseTypeOfFunction = checker.TypeFormatFlagsUseTypeOfFunction
const TypeFormatFlagsWriteArrayAsGenericType = checker.TypeFormatFlagsWriteArrayAsGenericType
const TypeFormatFlagsWriteArrowStyleSignature = checker.TypeFormatFlagsWriteArrowStyleSignature
const TypeFormatFlagsWriteCallStyleSignature = checker.TypeFormatFlagsWriteCallStyleSignature
const TypeFormatFlagsWriteClassExpressionAsTypeLiteral = checker.TypeFormatFlagsWriteClassExpressionAsTypeLiteral
const TypeFormatFlagsWriteTypeArgumentsOfSignature = checker.TypeFormatFlagsWriteTypeArgumentsOfSignature
type TypeId = checker.TypeId
type TypeMapper = checker.TypeMapper
type TypeMapperBase = checker.TypeMapperBase
type TypeMapperData = checker.TypeMapperData
type TypeMapperKind = checker.TypeMapperKind
const TypeMapperKindArray = checker.TypeMapperKindArray
const TypeMapperKindMerged = checker.TypeMapperKindMerged
const TypeMapperKindSimple = checker.TypeMapperKindSimple
const TypeMapperKindUnknown = checker.TypeMapperKindUnknown
type TypeNodeLinks = checker.TypeNodeLinks
type TypeParameter = checker.TypeParameter
type TypePredicate = checker.TypePredicate
type TypePredicateKind = checker.TypePredicateKind
const TypePredicateKindAssertsIdentifier = checker.TypePredicateKindAssertsIdentifier
const TypePredicateKindAssertsThis = checker.TypePredicateKindAssertsThis
const TypePredicateKindIdentifier = checker.TypePredicateKindIdentifier
const TypePredicateKindThis = checker.TypePredicateKindThis
type TypeReference = checker.TypeReference
type TypeResolution = checker.TypeResolution
type TypeSystemEntity = checker.TypeSystemEntity
type TypeSystemPropertyName = checker.TypeSystemPropertyName
const TypeSystemPropertyNameDeclaredType = checker.TypeSystemPropertyNameDeclaredType
const TypeSystemPropertyNameInitializerIsUndefined = checker.TypeSystemPropertyNameInitializerIsUndefined
const TypeSystemPropertyNameResolvedBaseConstraint = checker.TypeSystemPropertyNameResolvedBaseConstraint
const TypeSystemPropertyNameResolvedBaseConstructorType = checker.TypeSystemPropertyNameResolvedBaseConstructorType
const TypeSystemPropertyNameResolvedBaseTypes = checker.TypeSystemPropertyNameResolvedBaseTypes
const TypeSystemPropertyNameResolvedReturnType = checker.TypeSystemPropertyNameResolvedReturnType
const TypeSystemPropertyNameResolvedTypeArguments = checker.TypeSystemPropertyNameResolvedTypeArguments
const TypeSystemPropertyNameType = checker.TypeSystemPropertyNameType
const TypeSystemPropertyNameWriteType = checker.TypeSystemPropertyNameWriteType
type UnionOfUnionKey = checker.UnionOfUnionKey
type UnionOrIntersectionType = checker.UnionOrIntersectionType
type UnionReduction = checker.UnionReduction
const UnionReductionLiteral = checker.UnionReductionLiteral
const UnionReductionNone = checker.UnionReductionNone
const UnionReductionSubtype = checker.UnionReductionSubtype
type UnionType = checker.UnionType
type UniqueESSymbolType = checker.UniqueESSymbolType
type UnusedKind = checker.UnusedKind
const UnusedKindLocal = checker.UnusedKindLocal
const UnusedKindParameter = checker.UnusedKindParameter
type ValueSymbolLinks = checker.ValueSymbolLinks
//go:linkname ValueToString github.com/microsoft/typescript-go/internal/checker.ValueToString
func ValueToString(value any) string
type VarianceFlags = checker.VarianceFlags
const VarianceFlagsAllowsStructuralFallback = checker.VarianceFlagsAllowsStructuralFallback
const VarianceFlagsBivariant = checker.VarianceFlagsBivariant
const VarianceFlagsContravariant = checker.VarianceFlagsContravariant
const VarianceFlagsCovariant = checker.VarianceFlagsCovariant
const VarianceFlagsIndependent = checker.VarianceFlagsIndependent
const VarianceFlagsInvariant = checker.VarianceFlagsInvariant
const VarianceFlagsUnmeasurable = checker.VarianceFlagsUnmeasurable
const VarianceFlagsUnreliable = checker.VarianceFlagsUnreliable
const VarianceFlagsVarianceMask = checker.VarianceFlagsVarianceMask
type VarianceLinks = checker.VarianceLinks
type WideningContext = checker.WideningContext
type WideningKind = checker.WideningKind
const WideningKindFunctionReturn = checker.WideningKindFunctionReturn
const WideningKindGeneratorNext = checker.WideningKindGeneratorNext
const WideningKindGeneratorYield = checker.WideningKindGeneratorYield
const WideningKindNormal = checker.WideningKindNormal
//go:linkname GetFunctionFlags github.com/microsoft/typescript-go/internal/checker.getFunctionFlags
func GetFunctionFlags(node *ast.Node) checker.FunctionFlags
//go:linkname IsNonDeferredTypeReference github.com/microsoft/typescript-go/internal/checker.isNonDeferredTypeReference
func IsNonDeferredTypeReference(t *checker.Type) bool
