
// Code generated by tools/gen_shims. DO NOT EDIT.

package api

import "github.com/microsoft/typescript-go/internal/api"
import "github.com/microsoft/typescript-go/internal/ast"
import "github.com/microsoft/typescript-go/internal/checker"
import "github.com/microsoft/typescript-go/internal/project"
import _ "unsafe"

type API = api.API
type APIHost = api.APIHost
type APIOptions = api.APIOptions
type Callback = api.Callback
const CallbackDirectoryExists = api.CallbackDirectoryExists
const CallbackFileExists = api.CallbackFileExists
const CallbackGetAccessibleEntries = api.CallbackGetAccessibleEntries
const CallbackReadFile = api.CallbackReadFile
const CallbackRealpath = api.CallbackRealpath
type ConfigFileResponse = api.ConfigFileResponse
type ConfigureParams = api.ConfigureParams
var ErrClientError = api.ErrClientError
var ErrInvalidRequest = api.ErrInvalidRequest
//go:linkname FileHandle github.com/microsoft/typescript-go/internal/api.FileHandle
func FileHandle(file *ast.SourceFile) api.Handle[ast.SourceFile]
type GetSourceFileParams = api.GetSourceFileParams
type GetSymbolAtLocationParams = api.GetSymbolAtLocationParams
type GetSymbolAtPositionParams = api.GetSymbolAtPositionParams
type GetSymbolsAtLocationsParams = api.GetSymbolsAtLocationsParams
type GetSymbolsAtPositionsParams = api.GetSymbolsAtPositionsParams
type GetTypeOfSymbolParams = api.GetTypeOfSymbolParams
type GetTypesOfSymbolsParams = api.GetTypesOfSymbolsParams
type Handle[T any] = api.Handle[T]
type LoadProjectParams = api.LoadProjectParams
type MessagePackType = api.MessagePackType
const MessagePackTypeBin16 = api.MessagePackTypeBin16
const MessagePackTypeBin32 = api.MessagePackTypeBin32
const MessagePackTypeBin8 = api.MessagePackTypeBin8
const MessagePackTypeFixedArray3 = api.MessagePackTypeFixedArray3
const MessagePackTypeU8 = api.MessagePackTypeU8
type MessageType = api.MessageType
const MessageTypeCall = api.MessageTypeCall
const MessageTypeCallError = api.MessageTypeCallError
const MessageTypeCallResponse = api.MessageTypeCallResponse
const MessageTypeError = api.MessageTypeError
const MessageTypeRequest = api.MessageTypeRequest
const MessageTypeResponse = api.MessageTypeResponse
const MessageTypeUnknown = api.MessageTypeUnknown
type Method = api.Method
const MethodConfigure = api.MethodConfigure
const MethodGetSourceFile = api.MethodGetSourceFile
const MethodGetSymbolAtLocation = api.MethodGetSymbolAtLocation
const MethodGetSymbolAtPosition = api.MethodGetSymbolAtPosition
const MethodGetSymbolsAtLocations = api.MethodGetSymbolsAtLocations
const MethodGetSymbolsAtPositions = api.MethodGetSymbolsAtPositions
const MethodGetTypeOfSymbol = api.MethodGetTypeOfSymbol
const MethodGetTypesOfSymbols = api.MethodGetTypesOfSymbols
const MethodLoadProject = api.MethodLoadProject
const MethodParseConfigFile = api.MethodParseConfigFile
const MethodRelease = api.MethodRelease
//go:linkname NewAPI github.com/microsoft/typescript-go/internal/api.NewAPI
func NewAPI(host api.APIHost, options api.APIOptions) *api.API
//go:linkname NewProjectResponse github.com/microsoft/typescript-go/internal/api.NewProjectResponse
func NewProjectResponse(project *project.Project) *api.ProjectResponse
//go:linkname NewServer github.com/microsoft/typescript-go/internal/api.NewServer
func NewServer(options *api.ServerOptions) *api.Server
//go:linkname NewSymbolResponse github.com/microsoft/typescript-go/internal/api.NewSymbolResponse
func NewSymbolResponse(symbol *ast.Symbol) *api.SymbolResponse
//go:linkname NewTypeData github.com/microsoft/typescript-go/internal/api.NewTypeData
func NewTypeData(t *checker.Type) *api.TypeResponse
//go:linkname NodeHandle github.com/microsoft/typescript-go/internal/api.NodeHandle
func NodeHandle(node *ast.Node) api.Handle[ast.Node]
type ParseConfigFileParams = api.ParseConfigFileParams
//go:linkname ProjectHandle github.com/microsoft/typescript-go/internal/api.ProjectHandle
func ProjectHandle(p *project.Project) api.Handle[project.Project]
type ProjectResponse = api.ProjectResponse
type Server = api.Server
type ServerOptions = api.ServerOptions
//go:linkname SymbolHandle github.com/microsoft/typescript-go/internal/api.SymbolHandle
func SymbolHandle(symbol *ast.Symbol) api.Handle[ast.Symbol]
type SymbolResponse = api.SymbolResponse
//go:linkname TypeHandle github.com/microsoft/typescript-go/internal/api.TypeHandle
func TypeHandle(t *checker.Type) api.Handle[checker.Type]
type TypeResponse = api.TypeResponse
