name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull requests. Use with `only-new-issues` option.
  pull-requests: read

env:
  GO_VERSION: '1.24.1'
  GOMAXPROCS: 4

jobs:
  test-go:
    name: Test Go
    runs-on: rspack-ubuntu-22.04-large
    strategy:
      matrix:
        go-version: ['1.24.1']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          go-version: ${{ matrix.go-version }}
          cache-name: test-go
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.3.0
          args: --timeout=5m ./cmd/... ./internal/...
      - name: go vet
        run: npm run lint:go
      - name: go fmt
        run: npm run format:go
      - name: Unit Test
        run: |
          go test -parallel 4 ./internal/...

  test-node:
    name: Test npm packages
    runs-on: rspack-ubuntu-22.04-large
    strategy:
      matrix:
        go-version: ['1.24.1']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '24'
      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          go-version: ${{ matrix.go-version }}
          cache-name: test-node
      - name: Install pnpm
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Format
        run: pnpm format:check

      - name: Build
        run: pnpm build

      - name: TypeCheck
        run: pnpm typecheck

      - name: Install xvfb and dependencies
        if: ${{ runner.os == 'Linux' && runner.environment == 'self-hosted' }}
        run: |
          sudo apt update
          sudo apt install -y libasound2 libgbm1 libgtk-3-0 libnss3 xvfb

      - name: VSCode Test Cache
        uses: lynx-infra/cache@5c6160a6a4c7fca80a2f3057bb9dfc9513fcb732
        with:
          path: packages/vscode-extension/.vscode-test
          key: 'vscode-test'
          restore-keys: |
            - 'vscode-test-'

      - name: Test on Linux
        if: runner.os == 'Linux'
        run: xvfb-run -a pnpm -r test

      - name: Test on non-Linux
        if: runner.os != 'Linux'
        run: pnpm -r test

      - name: Lint
        run: pnpm run lint

  done:
    needs:
      - test-go
      - test-node
    if: always()
    runs-on: rspack-ubuntu-22.04-large
    name: CI Done
    steps:
      - run: exit 1
        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled')) }}
