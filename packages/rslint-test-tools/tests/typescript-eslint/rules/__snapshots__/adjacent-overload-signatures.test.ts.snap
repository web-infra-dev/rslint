// Rstest Snapshot v1

exports[`adjacent-overload-signatures > invalid 1`] = `
{
  "code": "
function wrap() {
  function foo(s: string);
  function foo(n: number);
  type bar = number;
  function foo(sn: string | number) {}
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 39,
          "line": 6,
        },
        "start": {
          "column": 3,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 2`] = `
{
  "code": "
if (true) {
  function foo(s: string);
  function foo(n: number);
  let a = 1;
  function foo(sn: string | number) {}
  foo(a);
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 39,
          "line": 6,
        },
        "start": {
          "column": 3,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 3`] = `
{
  "code": "
export function foo(s: string);
export function foo(n: number);
export function bar(): void {}
export function baz(): void {}
export function foo(sn: string | number) {}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 44,
          "line": 6,
        },
        "start": {
          "column": 1,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 4`] = `
{
  "code": "
export function foo(s: string);
export function foo(n: number);
export type bar = number;
export type baz = number | string;
export function foo(sn: string | number) {}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 44,
          "line": 6,
        },
        "start": {
          "column": 1,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 5`] = `
{
  "code": "
function foo(s: string);
function foo(n: number);
function bar(): void {}
function baz(): void {}
function foo(sn: string | number) {}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 37,
          "line": 6,
        },
        "start": {
          "column": 1,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 6`] = `
{
  "code": "
function foo(s: string);
function foo(n: number);
type bar = number;
type baz = number | string;
function foo(sn: string | number) {}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 37,
          "line": 6,
        },
        "start": {
          "column": 1,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 7`] = `
{
  "code": "
function foo(s: string) {}
function foo(n: number) {}
const a = '';
const b = '';
function foo(sn: string | number) {}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 37,
          "line": 6,
        },
        "start": {
          "column": 1,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 8`] = `
{
  "code": "
function foo(s: string) {}
function foo(n: number) {}
class Bar {}
function foo(sn: string | number) {}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 37,
          "line": 5,
        },
        "start": {
          "column": 1,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 9`] = `
{
  "code": "
function foo(s: string) {}
function foo(n: number) {}
function foo(sn: string | number) {}
class Bar {
  foo(s: string);
  foo(n: number);
  name: string;
  foo(sn: string | number) {}
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 30,
          "line": 9,
        },
        "start": {
          "column": 3,
          "line": 9,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 10`] = `
{
  "code": "
declare function foo(s: string);
declare function foo(n: number);
declare function bar(): void;
declare function baz(): void;
declare function foo(sn: string | number);
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 43,
          "line": 6,
        },
        "start": {
          "column": 1,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 11`] = `
{
  "code": "
declare function foo(s: string);
declare function foo(n: number);
const a = '';
const b = '';
declare function foo(sn: string | number);
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 43,
          "line": 6,
        },
        "start": {
          "column": 1,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 12`] = `
{
  "code": "
declare module 'Foo' {
  export function foo(s: string): void;
  export function foo(n: number): void;
  export function bar(): void;
  export function baz(): void;
  export function foo(sn: string | number): void;
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 50,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 13`] = `
{
  "code": "
declare module 'Foo' {
  export function foo(s: string): void;
  export function foo(n: number): void;
  export function foo(sn: string | number): void;
  function baz(s: string): void;
  export function bar(): void;
  function baz(n: number): void;
  function baz(sn: string | number): void;
}
      ",
  "diagnostics": [
    {
      "message": "All baz signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 33,
          "line": 8,
        },
        "start": {
          "column": 3,
          "line": 8,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 14`] = `
{
  "code": "
declare namespace Foo {
  export function foo(s: string): void;
  export function foo(n: number): void;
  export function bar(): void;
  export function baz(): void;
  export function foo(sn: string | number): void;
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 50,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 15`] = `
{
  "code": "
declare namespace Foo {
  export function foo(s: string): void;
  export function foo(n: number): void;
  export function foo(sn: string | number): void;
  function baz(s: string): void;
  export function bar(): void;
  function baz(n: number): void;
  function baz(sn: string | number): void;
}
      ",
  "diagnostics": [
    {
      "message": "All baz signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 33,
          "line": 8,
        },
        "start": {
          "column": 3,
          "line": 8,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 16`] = `
{
  "code": "
type Foo = {
  foo(s: string): void;
  foo(n: number): void;
  bar(): void;
  baz(): void;
  foo(sn: string | number): void;
};
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 34,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 17`] = `
{
  "code": "
type Foo = {
  foo(s: string): void;
  ['foo'](n: number): void;
  bar(): void;
  baz(): void;
  foo(sn: string | number): void;
};
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 34,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 18`] = `
{
  "code": "
type Foo = {
  foo(s: string): void;
  name: string;
  foo(n: number): void;
  foo(sn: string | number): void;
  bar(): void;
  baz(): void;
};
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 24,
          "line": 5,
        },
        "start": {
          "column": 3,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 19`] = `
{
  "code": "
interface Foo {
  (s: string): void;
  foo(n: number): void;
  (n: number): void;
  (sn: string | number): void;
  bar(): void;
  baz(): void;
  call(): void;
}
      ",
  "diagnostics": [
    {
      "message": "All call signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 21,
          "line": 5,
        },
        "start": {
          "column": 3,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 20`] = `
{
  "code": "
interface Foo {
  foo(s: string): void;
  foo(n: number): void;
  bar(): void;
  baz(): void;
  foo(sn: string | number): void;
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 34,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 21`] = `
{
  "code": "
interface Foo {
  foo(s: string): void;
  ['foo'](n: number): void;
  bar(): void;
  baz(): void;
  foo(sn: string | number): void;
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 34,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 22`] = `
{
  "code": "
interface Foo {
  foo(s: string): void;
  'foo'(n: number): void;
  bar(): void;
  baz(): void;
  foo(sn: string | number): void;
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 34,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 23`] = `
{
  "code": "
interface Foo {
  foo(s: string): void;
  name: string;
  foo(n: number): void;
  foo(sn: string | number): void;
  bar(): void;
  baz(): void;
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 24,
          "line": 5,
        },
        "start": {
          "column": 3,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 24`] = `
{
  "code": "
interface Foo {
  foo(): void;
  bar: {
    baz(s: string): void;
    baz(n: number): void;
    foo(): void;
    baz(sn: string | number): void;
  };
}
      ",
  "diagnostics": [
    {
      "message": "All baz signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 36,
          "line": 8,
        },
        "start": {
          "column": 5,
          "line": 8,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 25`] = `
{
  "code": "
interface Foo {
  new (s: string);
  new (n: number);
  foo(): void;
  bar(): void;
  new (sn: string | number);
}
      ",
  "diagnostics": [
    {
      "message": "All new signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 29,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 26`] = `
{
  "code": "
interface Foo {
  new (s: string);
  foo(): void;
  new (n: number);
  bar(): void;
  new (sn: string | number);
}
      ",
  "diagnostics": [
    {
      "message": "All new signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 19,
          "line": 5,
        },
        "start": {
          "column": 3,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
    {
      "message": "All new signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 29,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 2,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 27`] = `
{
  "code": "
class Foo {
  constructor(s: string);
  constructor(n: number);
  bar(): void {}
  baz(): void {}
  constructor(sn: string | number) {}
}
      ",
  "diagnostics": [
    {
      "message": "All constructor signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 38,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 28`] = `
{
  "code": "
class Foo {
  foo(s: string): void;
  foo(n: number): void;
  bar(): void {}
  baz(): void {}
  foo(sn: string | number): void {}
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 36,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 29`] = `
{
  "code": "
class Foo {
  foo(s: string): void;
  ['foo'](n: number): void;
  bar(): void {}
  baz(): void {}
  foo(sn: string | number): void {}
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 36,
          "line": 7,
        },
        "start": {
          "column": 3,
          "line": 7,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 30`] = `
{
  "code": "
class Foo {
  // prettier-ignore
  "foo"(s: string): void;
  foo(n: number): void;
  bar(): void {}
  baz(): void {}
  foo(sn: string | number): void {}
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 36,
          "line": 8,
        },
        "start": {
          "column": 3,
          "line": 8,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 31`] = `
{
  "code": "
class Foo {
  constructor(s: string);
  name: string;
  constructor(n: number);
  constructor(sn: string | number) {}
  bar(): void {}
  baz(): void {}
}
      ",
  "diagnostics": [
    {
      "message": "All constructor signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 26,
          "line": 5,
        },
        "start": {
          "column": 3,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 32`] = `
{
  "code": "
class Foo {
  foo(s: string): void;
  name: string;
  foo(n: number): void;
  foo(sn: string | number): void {}
  bar(): void {}
  baz(): void {}
}
      ",
  "diagnostics": [
    {
      "message": "All foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 24,
          "line": 5,
        },
        "start": {
          "column": 3,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 33`] = `
{
  "code": "
class Foo {
  static foo(s: string): void;
  name: string;
  static foo(n: number): void;
  static foo(sn: string | number): void {}
  bar(): void {}
  baz(): void {}
}
      ",
  "diagnostics": [
    {
      "message": "All static foo signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 31,
          "line": 5,
        },
        "start": {
          "column": 3,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`adjacent-overload-signatures > invalid 34`] = `
{
  "code": "
class Test {
  #private(): void;
  '#private'(): void;
  #private(arg: number): void {}
  '#private'(arg: number): void {}
}
      ",
  "diagnostics": [
    {
      "message": "All #private signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 33,
          "line": 5,
        },
        "start": {
          "column": 3,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
    {
      "message": "All '#private' signatures should be adjacent.",
      "messageId": "adjacentSignature",
      "range": {
        "end": {
          "column": 35,
          "line": 6,
        },
        "start": {
          "column": 3,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/adjacent-overload-signatures",
    },
  ],
  "errorCount": 2,
  "fileCount": 1,
  "ruleCount": 1,
}
`;
