// Rstest Snapshot v1

exports[`class-literal-property-style > invalid 1`] = `
{
  "code": "
class Mx {
  get p1() {
    return 'hello world';
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using readonly fields.",
      "messageId": "preferFieldStyle",
      "range": {
        "end": {
          "column": 9,
          "line": 3,
        },
        "start": {
          "column": 7,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 2`] = `
{
  "code": "
class Mx {
  get p1() {
    return \`hello world\`;
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using readonly fields.",
      "messageId": "preferFieldStyle",
      "range": {
        "end": {
          "column": 9,
          "line": 3,
        },
        "start": {
          "column": 7,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 3`] = `
{
  "code": "
class Mx {
  static get p1() {
    return 'hello world';
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using readonly fields.",
      "messageId": "preferFieldStyle",
      "range": {
        "end": {
          "column": 16,
          "line": 3,
        },
        "start": {
          "column": 14,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 4`] = `
{
  "code": "
class Mx {
  public static get foo() {
    return 1;
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using readonly fields.",
      "messageId": "preferFieldStyle",
      "range": {
        "end": {
          "column": 24,
          "line": 3,
        },
        "start": {
          "column": 21,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 5`] = `
{
  "code": "
class Mx {
  public get [myValue]() {
    return 'a literal value';
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using readonly fields.",
      "messageId": "preferFieldStyle",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 15,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 6`] = `
{
  "code": "
class Mx {
  public get [myValue]() {
    return 12345n;
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using readonly fields.",
      "messageId": "preferFieldStyle",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 15,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 7`] = `
{
  "code": "
class Mx {
  public readonly [myValue] = 'a literal value';
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 27,
          "line": 3,
        },
        "start": {
          "column": 20,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 8`] = `
{
  "code": "
class Mx {
  readonly p1 = 'hello world';
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 14,
          "line": 3,
        },
        "start": {
          "column": 12,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 9`] = `
{
  "code": "
class Mx {
  readonly p1 = \`hello world\`;
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 14,
          "line": 3,
        },
        "start": {
          "column": 12,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 10`] = `
{
  "code": "
class Mx {
  static readonly p1 = 'hello world';
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 21,
          "line": 3,
        },
        "start": {
          "column": 19,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 11`] = `
{
  "code": "
class Mx {
  protected get p1() {
    return 'hello world';
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using readonly fields.",
      "messageId": "preferFieldStyle",
      "range": {
        "end": {
          "column": 19,
          "line": 3,
        },
        "start": {
          "column": 17,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 12`] = `
{
  "code": "
class Mx {
  protected readonly p1 = 'hello world';
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 24,
          "line": 3,
        },
        "start": {
          "column": 22,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 13`] = `
{
  "code": "
class Mx {
  public static get p1() {
    return 'hello world';
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using readonly fields.",
      "messageId": "preferFieldStyle",
      "range": {
        "end": {
          "column": 23,
          "line": 3,
        },
        "start": {
          "column": 21,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 14`] = `
{
  "code": "
class Mx {
  public static readonly p1 = 'hello world';
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 28,
          "line": 3,
        },
        "start": {
          "column": 26,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 15`] = `
{
  "code": "
class Mx {
  public get myValue() {
    return gql\`
      {
        user(id: 5) {
          firstName
          lastName
        }
      }
    \`;
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using readonly fields.",
      "messageId": "preferFieldStyle",
      "range": {
        "end": {
          "column": 21,
          "line": 3,
        },
        "start": {
          "column": 14,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 16`] = `
{
  "code": "
class Mx {
  public readonly myValue = gql\`
    {
      user(id: 5) {
        firstName
        lastName
      }
    }
  \`;
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 26,
          "line": 3,
        },
        "start": {
          "column": 19,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 17`] = `
{
  "code": "
class A {
  private readonly foo: string = 'bar';
  constructor(foo: string) {
    const bar = new (class {
      private readonly foo: string = 'baz';
      constructor() {
        this.foo = 'qux';
      }
    })();
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 23,
          "line": 3,
        },
        "start": {
          "column": 20,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 18`] = `
{
  "code": "
class A {
  private readonly ['foo']: string = 'bar';
  constructor(foo: string) {
    const bar = new (class {
      private readonly foo: string = 'baz';
      constructor() {}
    })();

    if (bar) {
      this.foo = 'baz';
    }
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 27,
          "line": 6,
        },
        "start": {
          "column": 24,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`class-literal-property-style > invalid 19`] = `
{
  "code": "
class A {
  private readonly foo: string = 'bar';
  constructor(foo: string) {
    function func() {
      this.foo = 'aa';
    }
  }
}
      ",
  "diagnostics": [
    {
      "message": "Literals should be exposed using getters.",
      "messageId": "preferGetterStyle",
      "range": {
        "end": {
          "column": 23,
          "line": 3,
        },
        "start": {
          "column": 20,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/class-literal-property-style",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;
