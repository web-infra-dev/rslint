// Rstest Snapshot v1

exports[`no-array-delete > invalid 1`] = `
{
  "code": "
        declare const arr: number[];
        delete arr[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 2`] = `
{
  "code": "
        declare const arr: number[];
        declare const key: number;
        delete arr[key];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 24,
          "line": 4,
        },
        "start": {
          "column": 9,
          "line": 4,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 3`] = `
{
  "code": "
        declare const arr: number[];

        enum Keys {
          A,
          B,
        }

        delete arr[Keys.A];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 27,
          "line": 9,
        },
        "start": {
          "column": 9,
          "line": 9,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 4`] = `
{
  "code": "
        declare const arr: number[];
        declare function doWork(): void;
        delete arr[(doWork(), 1)];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 34,
          "line": 4,
        },
        "start": {
          "column": 9,
          "line": 4,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 5`] = `
{
  "code": "
        declare const arr: Array<number>;
        delete arr[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 6`] = `
{
  "code": "delete [1, 2, 3][0];",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 20,
          "line": 1,
        },
        "start": {
          "column": 1,
          "line": 1,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 7`] = `
{
  "code": "
        declare const arr: unknown[];
        delete arr[Math.random() ? 0 : 1];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 42,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 8`] = `
{
  "code": "
        declare const arr: number[] | string[] | boolean[];
        delete arr[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 9`] = `
{
  "code": "
        declare const arr: number[] & unknown;
        delete arr[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 10`] = `
{
  "code": "
        declare const arr: (number | string)[];
        delete arr[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 11`] = `
{
  "code": "
        declare const obj: { a: { b: { c: number[] } } };
        delete obj.a.b.c[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 28,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 12`] = `
{
  "code": "
        declare function getArray<T extends number[]>(): T;
        delete getArray()[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 29,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 13`] = `
{
  "code": "
        declare function getArray<T extends number>(): T[];
        delete getArray()[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 29,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 14`] = `
{
  "code": "
        function deleteFromArray(a: number[]) {
          delete a[0];
        }
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 11,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 15`] = `
{
  "code": "
        function deleteFromArray<T extends number>(a: T[]) {
          delete a[0];
        }
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 11,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 16`] = `
{
  "code": "
        function deleteFromArray<T extends number[]>(a: T) {
          delete a[0];
        }
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 11,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 17`] = `
{
  "code": "
        declare const tuple: [number, string];
        delete tuple[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 24,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 18`] = `
{
  "code": "
        declare const a: number[];
        declare const b: number;

        delete [...a, ...a][b];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 31,
          "line": 5,
        },
        "start": {
          "column": 9,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 19`] = `
{
  "code": "
        declare const a: number[];
        declare const b: number;

        // before expression
        delete /** multi
        line */ a[((
        // single-line
        b /* inline */ /* another-inline */ )
        ) /* another-one */ ] /* before semicolon */; /* after semicolon */
        // after expression
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 30,
          "line": 10,
        },
        "start": {
          "column": 9,
          "line": 6,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 20`] = `
{
  "code": "
        declare const a: number[];
        declare const b: number;

        delete ((a[((b))]));
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 28,
          "line": 5,
        },
        "start": {
          "column": 9,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 21`] = `
{
  "code": "
        declare const a: number[];
        declare const b: number;

        delete a[(b + 1) * (b + 2)];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 36,
          "line": 5,
        },
        "start": {
          "column": 9,
          "line": 5,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;

exports[`no-array-delete > invalid 22`] = `
{
  "code": "
        declare const arr: string & Array<number>;
        delete arr[0];
      ",
  "diagnostics": [
    {
      "message": "Using the \`delete\` operator with an array expression is unsafe.",
      "messageId": "noArrayDelete",
      "range": {
        "end": {
          "column": 22,
          "line": 3,
        },
        "start": {
          "column": 9,
          "line": 3,
        },
      },
      "ruleName": "@typescript-eslint/no-array-delete",
    },
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1,
}
`;
