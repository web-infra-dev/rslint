exports[`no-empty-object-type > invalid 1`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterface",
      "message": "An empty interface declaration allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 11
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 10`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 3,
          "column": 11
        },
        "end": {
          "line": 3,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 11`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 11
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 12`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 4,
          "column": 20
        },
        "end": {
          "line": 4,
          "column": 27
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 13`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyObject",
      "message": "The \`{}\` (\\"empty object\\") type allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 13
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 14`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyObject",
      "message": "The \`{}\` (\\"empty object\\") type allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 13
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 15`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyObject",
      "message": "The \`{}\` (\\"empty object\\") type allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 12
        },
        "end": {
          "line": 1,
          "column": 14
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 16`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyObject",
      "message": "The \`{}\` (\\"empty object\\") type allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 12
        },
        "end": {
          "line": 1,
          "column": 14
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 17`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyObject",
      "message": "The \`{}\` (\\"empty object\\") type allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 2,
          "column": 12
        },
        "end": {
          "line": 4,
          "column": 2
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 18`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyObject",
      "message": "The \`{}\` (\\"empty object\\") type allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 23
        },
        "end": {
          "line": 1,
          "column": 25
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 19`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyObject",
      "message": "The \`{}\` (\\"empty object\\") type allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 13
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 2`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterface",
      "message": "An empty interface declaration allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 11
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 20`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyObject",
      "message": "The \`{}\` (\\"empty object\\") type allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 13
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 21`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterface",
      "message": "An empty interface declaration allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 11
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 3`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 6,
          "column": 11
        },
        "end": {
          "line": 6,
          "column": 18
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 4`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 6,
          "column": 11
        },
        "end": {
          "line": 6,
          "column": 18
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 5`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 6,
          "column": 11
        },
        "end": {
          "line": 6,
          "column": 18
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 6`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 6,
          "column": 11
        },
        "end": {
          "line": 6,
          "column": 18
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 7`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 11
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 8`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 11
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    },
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyObject",
      "message": "The \`{}\` (\\"empty object\\") type allows any non-nullish value, including literals like \`0\` and \`\\"\\"\`.\\n- If that's what you want, disable this lint rule with an inline comment or configure the '{{ option }}' rule option.\\n- If you want a type meaning \\"any object\\", you probably want \`object\` instead.\\n- If you want a type meaning \\"any value\\", you probably want \`unknown\` instead.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 1,
          "column": 39
        },
        "end": {
          "line": 1,
          "column": 41
        }
      }
    }
  ],
  "errorCount": 2,
  "fileCount": 1,
  "ruleCount": 1
}
`;

exports[`no-empty-object-type > invalid 9`] = `
{
  "diagnostics": [
    {
      "ruleName": "no-empty-object-type",
      "messageId": "noEmptyInterfaceWithSuper",
      "message": "An interface declaring no members is equivalent to its supertype.",
      "filePath": "src/virtual.ts",
      "range": {
        "start": {
          "line": 5,
          "column": 11
        },
        "end": {
          "line": 5,
          "column": 15
        }
      }
    }
  ],
  "errorCount": 1,
  "fileCount": 1,
  "ruleCount": 1
}
`;
