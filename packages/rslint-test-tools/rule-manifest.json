{
  "rules": [
    {
      "name": "adjacent-overload-signatures",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "array-type",
      "group": "typescript-eslint",
      "status": "partial-impl",
      "failing_case": [
        {
          "name": "array-type (nested)",
          "url": "packages/rslint-test-tools/tests/typescript-eslint/rules/array-type.test.ts#L1998"
        },
        {
          "name": "schema validation",
          "url": "packages/rslint-test-tools/tests/typescript-eslint/rules/array-type.test.ts#L2234"
        }
      ]
    },
    {
      "name": "await-thenable",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "class-literal-property-style",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "no-array-delete",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "no-base-to-string",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-confusing-void-expression",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "no-duplicate-type-constituents",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "no-empty-function",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "no-empty-interface",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "no-floating-promises",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-for-in-array",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-implied-eval",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "no-meaningless-void-operator",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-misused-promises",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-misused-spread",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-mixed-enums",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-namespace",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "no-redundant-type-constituents",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-require-imports",
      "group": "typescript-eslint",
      "status": "full",
      "failing_case": []
    },
    {
      "name": "no-unnecessary-boolean-literal-compare",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unnecessary-template-expression",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unnecessary-type-arguments",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unnecessary-type-assertion",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unsafe-argument",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unsafe-assignment",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unsafe-call",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unsafe-enum-comparison",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unsafe-member-access",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unsafe-return",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unsafe-type-assertion",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unsafe-unary-minus",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-unused-vars",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-useless-empty-export",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "no-var-requires",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "non-nullable-type-assertion-style",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "only-throw-error",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "prefer-as-const",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "prefer-promise-reject-errors",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "prefer-reduce-type-parameter",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "prefer-return-this-type",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "promise-function-async",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "related-getter-setter-pairs",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "require-array-sort-compare",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "require-await",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "restrict-plus-operands",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "restrict-template-expressions",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "return-await",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "switch-exhaustiveness-check",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "unbound-method",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    },
    {
      "name": "use-unknown-in-catch-callback-variable",
      "group": "typescript-eslint",
      "status": "partial-test",
      "failing_case": []
    }
  ]
}
